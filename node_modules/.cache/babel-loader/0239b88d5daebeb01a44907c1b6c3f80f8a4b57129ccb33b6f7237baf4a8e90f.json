{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth, collection, getDocs, onAuthStateChanged } from '@/firebase';\nexport default {\n  data() {\n    return {\n      ligas: [],\n      dataLigas: [],\n      selectedLiga: '',\n      search: '',\n      selectedImageURL: '',\n      polje1: [],\n      headers: [{\n        text: 'Kolo',\n        value: 'kl'\n      }, {\n        text: 'Domacin',\n        value: 'dm'\n      }, {\n        text: 'Golovi domačina',\n        value: 'gd'\n      }, {\n        text: \":\",\n        value: 'i'\n      }, {\n        text: 'Golovi gostiju',\n        value: 'gg'\n      }, {\n        text: 'Gosti',\n        value: 'gs'\n      }, {\n        text: 'Liga',\n        value: 'lg'\n      }, {\n        text: 'Mjesto',\n        value: 'ms'\n      }, {\n        text: 'Stadion',\n        value: 'std'\n      }, {\n        text: 'Gledatelji',\n        value: 'gl'\n      }, {\n        text: 'Datum',\n        value: 'dt'\n      }],\n      podaci: []\n    };\n  },\n  mounted() {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\n        getDocs(colRef).then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            this.ligas.push(doc.id);\n          });\n        }).catch(error => {\n          console.error(\"Error fetching subcollection documents:\", error);\n        });\n      } else {\n        console.log(\"User is not loged in\");\n      }\n      this.dohvatPodatakaLige();\n    });\n  },\n  methods: {\n    async dohvatPodatakaLige() {\n      this.dataLigas = [];\n      const a = collection(db, \"Users\", auth.currentUser.email, \"Lige\");\n      await getDocs(a).then(querySnapshot => {\n        querySnapshot.docs.forEach(doc => {\n          this.dataLigas.push({\n            liga: doc.id,\n            data: doc.data()\n          });\n        });\n      });\n    },\n    async loadLeagueImage() {\n      if (this.selectedLiga) {\n        const selectedLigaData = this.dataLigas.find(liga => liga.liga === this.selectedLiga);\n        if (selectedLigaData && selectedLigaData.data.imageURL) {\n          this.selectedImageURL = selectedLigaData.data.imageURL;\n        } else {\n          this.selectedImageURL = \"\";\n        }\n      } else {\n        this.selectedImageURL = '';\n      }\n      this.dohvatPodatakaTekme();\n    },\n    async dohvatPodatakaTekme() {\n      this.polje1 = [];\n      const tekma = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Utakmice\");\n      await getDocs(tekma).then(querySnapshot => {\n        querySnapshot.docs.forEach(doc => {\n          this.polje1.push({\n            data: doc.data()\n          });\n        });\n        this.dohvatPodatakaZATablicu();\n      });\n    },\n    dohvatPodatakaZATablicu() {\n      this.podaci = [];\n      this.polje1.forEach(item => {\n        this.podaci.push({\n          kl: item.data.Kolo,\n          dm: item.data.Domaćin,\n          gd: item.data.domacinGol,\n          i: \":\",\n          gg: item.data.gostiGol,\n          gs: item.data.Gosti,\n          lg: item.data.Liga,\n          ms: item.data.Mjesto,\n          std: item.data.stadionName,\n          gl: item.data.gledateljiBroj,\n          dt: item.data.datumTekme\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","auth","collection","getDocs","onAuthStateChanged","data","ligas","dataLigas","selectedLiga","search","selectedImageURL","polje1","headers","text","value","podaci","mounted","user","colRef","email","then","querySnapshot","forEach","doc","push","id","catch","error","console","log","dohvatPodatakaLige","methods","a","currentUser","docs","liga","loadLeagueImage","selectedLigaData","find","imageURL","dohvatPodatakaTekme","tekma","dohvatPodatakaZATablicu","item","kl","Kolo","dm","Domaćin","gd","domacinGol","i","gg","gostiGol","gs","Gosti","lg","Liga","ms","Mjesto","std","stadionName","gl","gledateljiBroj","dt","datumTekme"],"sources":["src/views/TekmaPodaci.vue"],"sourcesContent":["<template>\r\n    <div data-app class=\"obrub1\">\r\n        <v-row >\r\n          <v-col cols=\"2\" v-if=\"selectedImageURL\">\r\n            <v-img :src=\"selectedImageURL\" v-if=\"selectedImageURL\" class=\"image-box\"></v-img>\r\n          </v-col>\r\n          \r\n          <v-col cols=\"4\" >\r\n            <div class=\"naslov\" style=\"color: black !important; margin-top: 0px !important;\">\r\n              <h2>Pregled utakmica</h2>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n            <v-select\r\n              :items=\"ligas\"\r\n              @change=\"loadLeagueImage()\"\r\n              label=\"Izaberite ligu za prikazati!\"\r\n              v-model=\"selectedLiga\"\r\n              style=\"width: 40%; margin-left: 30%;\"\r\n            ></v-select>\r\n                \r\n            <v-text-field\r\n                v-model=\"search\"\r\n                append-icon=\"mdi-magnify\"\r\n                label=\"Search\"\r\n                single-line\r\n                hide-details\r\n                class=\"search\"\r\n            ></v-text-field>\r\n            \r\n\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"podaci\"\r\n                :search=\"search\"\r\n                style=\"font-weight: bold; text-align: center;\"\r\n                class=\"elevation-1\"\r\n            >\r\n            </v-data-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, auth, collection, getDocs, onAuthStateChanged} from '@/firebase';\r\n  export default {\r\n    data () {\r\n      return {\r\n        ligas: [],\r\n        dataLigas: [],\r\n        selectedLiga: '',\r\n        search: '',\r\n        selectedImageURL: '',\r\n        polje1: [],\r\n        headers: [\r\n            { text: 'Kolo', value: 'kl'},\r\n            { text: 'Domacin', value: 'dm'},\r\n            { text: 'Golovi domačina', value: 'gd'},\r\n            { text: \":\", value: 'i'},\r\n            { text: 'Golovi gostiju', value: 'gg'},\r\n            { text: 'Gosti', value: 'gs'},\r\n            { text: 'Liga', value: 'lg' },\r\n            { text: 'Mjesto', value: 'ms' },\r\n            { text: 'Stadion', value: 'std' },\r\n            { text: 'Gledatelji', value: 'gl' },\r\n            { text: 'Datum', value: 'dt' },\r\n        ],\r\n        podaci: [],\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      onAuthStateChanged(auth, (user) => {\r\n\t\tif (user) {\r\n            const colRef = collection(db, \"Users\", user.email, \"Lige\");\r\n            getDocs(colRef)\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                this.ligas.push(doc.id);\r\n            });\r\n            })\r\n            .catch((error) => {\r\n            console.error(\"Error fetching subcollection documents:\", error);\r\n            });\r\n\t\t} else {\r\n\t\t\tconsole.log(\"User is not loged in\");\r\n\t\t}\r\n\r\n        this.dohvatPodatakaLige();\r\n\r\n\t\t});\r\n    },\r\n\r\n    methods: {\r\n      async dohvatPodatakaLige() {\r\n        this.dataLigas = [];\r\n          const a = collection(db, \"Users\", auth.currentUser.email, \"Lige\");\r\n          await getDocs(a)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.dataLigas.push({liga: doc.id, data: doc.data()});\r\n            });\r\n          });\r\n      },\r\n\r\n      async loadLeagueImage() {\r\n      if (this.selectedLiga) {\r\n        const selectedLigaData = this.dataLigas.find(liga => liga.liga === this.selectedLiga);\r\n        if (selectedLigaData && selectedLigaData.data.imageURL) {\r\n          this.selectedImageURL = selectedLigaData.data.imageURL;\r\n        } else {\r\n          this.selectedImageURL = \"\";\r\n        }\r\n      } else {\r\n        this.selectedImageURL = '';\r\n      }\r\n      this.dohvatPodatakaTekme();\r\n    },\r\n\r\n    async dohvatPodatakaTekme() {\r\n        this.polje1 = [];\r\n        const tekma = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Utakmice\");\r\n           await getDocs(tekma)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.polje1.push({data: doc.data()});\r\n            });\r\n            this.dohvatPodatakaZATablicu();\r\n        });\r\n    },\r\n\r\n      dohvatPodatakaZATablicu() {\r\n        this.podaci = [];\r\n\r\n        this.polje1.forEach((item) => {\r\n          this.podaci.push({\r\n            kl: item.data.Kolo,\r\n            dm: item.data.Domaćin,\r\n            gd: item.data.domacinGol,\r\n            i: \":\",\r\n            gg: item.data.gostiGol,\r\n            gs: item.data.Gosti,\r\n            lg: item.data.Liga,\r\n            ms: item.data.Mjesto,\r\n            std: item.data.stadionName,\r\n            gl: item.data.gledateljiBroj,\r\n            dt: item.data.datumTekme\r\n          });\r\n          \r\n        });\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .obrub1\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .search {\r\n    margin-left: 30%;\r\n    margin-right: 30%;\r\n    margin-bottom: 30px;\r\n  }\r\n  .image-box {\r\n  width: 200px;\r\n  height: 200px; \r\n  } \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}