{"ast":null,"code":"import { db, collection, addDoc, getDoc } from '@/firebase';\nexport default {\n  data: () => ({\n    clubName: null,\n    clubCountry: null,\n    clubYear: null,\n    ligas: [],\n    selectedLiga: ''\n  }),\n  methods: {\n    clearFormData() {\n      this.clubName = null;\n      this.clubYear = null;\n      this.clubCountry = null;\n    },\n    UploadImageToStorage() {\n      console.log(\"uplodaing...\");\n      const storageRef = ref(storage, \"Users/\" + auth.currentUser.email + \"/ClubPicture/picture\");\n      console.log(this.$refs.myfile.files);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(console.log(\"done!\"));\n    },\n    async createClubsSubcollection() {\n      if (this.selectedLiga) {\n        try {\n          const clubData = {\n            clubName: this.clubName,\n            clubCountry: this.clubCountry,\n            clubYear: this.clubYear\n          };\n          const newClubRef = await addDoc(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", this.clubName), clubData);\n          console.log('New club added with ID:', newClubRef.id);\n        } catch (error) {\n          console.error('Error creating club:', error);\n        }\n      }\n    }\n  },\n  async mounted() {\n    try {\n      const ligasSnapshot = await getDoc(collection(db, \"Users\", auth.currentUser.email, 'Lige', this.ligaName));\n      this.ligas = ligasSnapshot.docs.map(doc => ({\n        id: doc.id,\n        name: doc.data().name\n      }));\n    } catch (error) {\n      //console.error('Error fetching ligas:', error);\n    }\n  }\n};","map":{"version":3,"names":["db","collection","addDoc","getDoc","data","clubName","clubCountry","clubYear","ligas","selectedLiga","methods","clearFormData","UploadImageToStorage","console","log","storageRef","ref","storage","auth","currentUser","email","$refs","myfile","files","uploadBytes","then","createClubsSubcollection","clubData","newClubRef","id","error","mounted","ligasSnapshot","ligaName","docs","map","doc","name"],"sources":["src/views/KreirajKLUB.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"naslov\">\r\n            <h1>Kreiraj klub</h1>\r\n        </div>\r\n    \r\n        <div class=\"obrub\">\r\n            <v-text-field v-model=\"clubName\" label=\"Naziv kluba\" variant=\"underlined\"></v-text-field>\r\n            <v-text-field v-model=\"clubYear\" label=\"Godina osnivanja\" variant=\"underlined\"></v-text-field>\r\n            <v-text-field v-model=\"clubCountry\" label=\"DrÅ¾ava\" variant=\"underlined\"></v-text-field>\r\n\r\n            <v-row class=\"row2\">\r\n              <v-col>\r\n                  <div>\r\n                      <h5 style=\"font-size: 20px; margin-bottom: 10px;\">Liga u kojoj se klub nalazi</h5>\r\n                      <select class=\"select2\" id=\"liga\" v-model=\"selectedLiga\" @change=\"createClubsSubcollection\">\r\n                        <option value=\"\">Select an option</option>\r\n                        <option v-for=\"liga in ligas\" :key=\"liga.id\" :value=\"liga.id\">{{ liga.name }}</option>\r\n                      </select>\r\n                      <br><br>\r\n                  </div>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <h3 class=\"grb\">Grb Kluba</h3>\r\n\r\n            <input \r\n                class=\"butot\" \r\n                type=\"file\" \r\n                ref=\"myfile\" \r\n            />\r\n\r\n            <v-btn @click=\"createClubsSubcollection()\" elevation=\"2\" style=\"background-color: green; color: white; margin-top:40px; margin-left: 85% !important;\">Kreiraj!</v-btn>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, collection, addDoc, getDoc} from '@/firebase';\r\n  export default {\r\n    data: () => ({\r\n      clubName: null,\r\n      clubCountry: null,\r\n      clubYear: null,\r\n      ligas: [],\r\n      selectedLiga: '',\r\n    }),\r\n\r\n    methods: {\r\n      clearFormData() {\r\n\t\t\t  this.clubName = null;\r\n\t\t\t  this.clubYear = null;\r\n\t\t\t  this.clubCountry = null;\r\n\t\t  },\r\n\r\n        UploadImageToStorage() {\r\n            console.log(\"uplodaing...\");\r\n            const storageRef = ref(storage, \"Users/\"+auth.currentUser.email+\"/ClubPicture/picture\");\r\n            console.log(this.$refs.myfile.files);\r\n            uploadBytes(storageRef, this.$refs.myfile.files[0]).then(\r\n                console.log(\"done!\")\r\n            );\r\n        },   \r\n\r\n        async createClubsSubcollection() {\r\n      if (this.selectedLiga) {\r\n        try {\r\n          const clubData = {\r\n            clubName: this.clubName,\r\n            clubCountry: this.clubCountry,\r\n            clubYear: this.clubYear\r\n          };\r\n\r\n          const newClubRef = await addDoc(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", this.clubName), clubData);\r\n          console.log('New club added with ID:', newClubRef.id);\r\n        } catch (error) {\r\n          console.error('Error creating club:', error);\r\n        }\r\n      }\r\n    },\r\n\r\n    },\r\n\r\n    async mounted() {\r\n    try {\r\n      const ligasSnapshot = await getDoc(collection(db, \"Users\", auth.currentUser.email, 'Lige', this.ligaName));\r\n      this.ligas = ligasSnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        name: doc.data().name,\r\n      }));\r\n    } catch (error) {\r\n      //console.error('Error fetching ligas:', error);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n  .obrub\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 20%;\r\n    margin-right: 20%;\r\n    margin-top: 100px; \r\n  }\r\n\r\n  .v-text-field\r\n  {\r\n    font-size: 20px;\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .select2\r\n  {\r\n    font-size: 30px; \r\n    text-align: center;\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    border: 2px solid black;\r\n  }\r\n\r\n  .row2\r\n  {\r\n    color: black;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n</style>"],"mappings":"AAsCA,SAAAA,EAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,MAAA;AACA;EACAC,IAAA,EAAAA,CAAA;IACAC,QAAA;IACAC,WAAA;IACAC,QAAA;IACAC,KAAA;IACAC,YAAA;EACA;EAEAC,OAAA;IACAC,cAAA;MACA,KAAAN,QAAA;MACA,KAAAE,QAAA;MACA,KAAAD,WAAA;IACA;IAEAM,qBAAA;MACAC,OAAA,CAAAC,GAAA;MACA,MAAAC,UAAA,GAAAC,GAAA,CAAAC,OAAA,aAAAC,IAAA,CAAAC,WAAA,CAAAC,KAAA;MACAP,OAAA,CAAAC,GAAA,MAAAO,KAAA,CAAAC,MAAA,CAAAC,KAAA;MACAC,WAAA,CAAAT,UAAA,OAAAM,KAAA,CAAAC,MAAA,CAAAC,KAAA,KAAAE,IAAA,CACAZ,OAAA,CAAAC,GAAA,UACA;IACA;IAEA,MAAAY,yBAAA;MACA,SAAAjB,YAAA;QACA;UACA,MAAAkB,QAAA;YACAtB,QAAA,OAAAA,QAAA;YACAC,WAAA,OAAAA,WAAA;YACAC,QAAA,OAAAA;UACA;UAEA,MAAAqB,UAAA,SAAA1B,MAAA,CAAAD,UAAA,CAAAD,EAAA,WAAAkB,IAAA,CAAAC,WAAA,CAAAC,KAAA,eAAAX,YAAA,kBAAAJ,QAAA,GAAAsB,QAAA;UACAd,OAAA,CAAAC,GAAA,4BAAAc,UAAA,CAAAC,EAAA;QACA,SAAAC,KAAA;UACAjB,OAAA,CAAAiB,KAAA,yBAAAA,KAAA;QACA;MACA;IACA;EAEA;EAEA,MAAAC,QAAA;IACA;MACA,MAAAC,aAAA,SAAA7B,MAAA,CAAAF,UAAA,CAAAD,EAAA,WAAAkB,IAAA,CAAAC,WAAA,CAAAC,KAAA,eAAAa,QAAA;MACA,KAAAzB,KAAA,GAAAwB,aAAA,CAAAE,IAAA,CAAAC,GAAA,CAAAC,GAAA;QACAP,EAAA,EAAAO,GAAA,CAAAP,EAAA;QACAQ,IAAA,EAAAD,GAAA,CAAAhC,IAAA,GAAAiC;MACA;IACA,SAAAP,KAAA;MACA;IAAA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}