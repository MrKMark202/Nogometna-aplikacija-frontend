{"ast":null,"code":"import axios from 'axios';\nimport $router from '@/router';\nlet Service = axios.create({\n  baseURL: 'http://localhost:10000/',\n  timeout: 1000\n});\nService.interceptors.request.use(request => {\n  let token = Auth.getToken();\n  if (!token) {\n    $router.go();\n    return;\n  } else {\n    request.headers[\"Authorization\"] = 'Bearer' + token;\n  }\n  return request;\n});\nService.interceptors.response.use(response => response, error => {\n  if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n    Auth.logout();\n    $router.go();\n  }\n});\nlet Auth = {\n  async login(email, password) {\n    let response = await axios.post(\"http://localhost:10000/api/auth/login\", {\n      email: email,\n      password: password\n    });\n    let user = response.data;\n    localStorage.setItem('user', JSON.stringify(user));\n    return true;\n  },\n  logout() {\n    localStorage.removeItem('user');\n  },\n  async signin(name, surname, date, email, password, profilna, pin) {\n    let response = await axios.post(\"http://localhost:10000/api/auth/signUp\", {\n      ime: name,\n      prezime: surname,\n      datumRodenja: date,\n      email: email,\n      password: password,\n      profilna: profilna,\n      pin: pin\n    });\n    let user = response.data;\n    localStorage.setItem('user', JSON.stringify(user));\n    return true;\n  },\n  getUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  },\n  getToken() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return user.token;\n    } else {\n      return false;\n    }\n  },\n  authenticated() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return true;\n    }\n    return false;\n  },\n  state: {\n    get authenticated() {\n      return Auth.authenticated();\n    },\n    get userEmail() {\n      let user = Auth.getUser();\n      if (user) {\n        return user.email;\n      }\n    },\n    get userProfilePicture() {\n      let user = Auth.getUser();\n      if (user) {\n        return user.profilna;\n      }\n    }\n  }\n};\nexport { Service, Auth };","map":{"version":3,"names":["axios","$router","Service","create","baseURL","timeout","interceptors","request","use","token","Auth","getToken","go","headers","response","error","status","logout","login","email","password","post","user","data","localStorage","setItem","JSON","stringify","removeItem","signin","name","surname","date","profilna","pin","ime","prezime","datumRodenja","getUser","parse","getItem","authenticated","state","userEmail","userProfilePicture"],"sources":["C:/Users/mkata/OneDrive/Radna povrÅ¡ina/Fakultet/Web aplikacije/Nogometna aplikacija - web apps/Nogometna-aplikacija-frontend/src/components/registracija.js"],"sourcesContent":["import axios from 'axios';\r\nimport $router from '@/router'\r\n\r\nlet Service = axios.create({\r\n    baseURL: 'http://localhost:10000/',\r\n    timeout: 1000,\r\n});\r\n\r\nService.interceptors.request.use((request) => {\r\n    let token = Auth.getToken()\r\n\r\n    if (!token) {\r\n        $router.go();\r\n        return;\r\n    }\r\n    else {\r\n        request.headers[\"Authorization\"] = 'Bearer' + token;\r\n    }\r\n\r\n    return request;\r\n})\r\n\r\nService.interceptors.response.use((response) => response, (error) => {\r\n    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n        Auth.logout();\r\n        $router.go();\r\n    }\r\n})\r\n\r\nlet Auth = {\r\n    async login(email, password) {\r\n        let response = await axios.post(\"http://localhost:10000/api/auth/login\", {\r\n            email: email,\r\n            password: password,\r\n        })\r\n\r\n        let user = response.data;\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        return true;\r\n    },\r\n\r\n    logout() {\r\n        localStorage.removeItem('user');\r\n    },\r\n\r\n    async signin(name, surname, date, email, password, profilna, pin) {\r\n        let response = await axios.post(\"http://localhost:10000/api/auth/signUp\", {\r\n            ime: name,\r\n            prezime: surname,\r\n            datumRodenja: date,\r\n            email: email,\r\n            password: password,\r\n            profilna: profilna,\r\n            pin: pin\r\n        })\r\n\r\n        let user = response.data;\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        return true;\r\n    },\r\n\r\n    getUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    },\r\n\r\n    getToken() {\r\n        let user = Auth.getUser();\r\n        if (user && user.token) {\r\n            return user.token;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    authenticated() {\r\n        let user = Auth.getUser();\r\n        if (user && user.token) {\r\n            return true\r\n        }\r\n        return false;\r\n    },\r\n\r\n    state: {\r\n        get authenticated() {\r\n            return Auth.authenticated();\r\n        },\r\n\r\n        get userEmail() {\r\n            let user = Auth.getUser();\r\n\r\n            if (user) {\r\n                return user.email;\r\n            }\r\n        },\r\n\r\n        get userProfilePicture() {\r\n            let user = Auth.getUser();\r\n\r\n            if (user) {\r\n                return user.profilna;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport {Service, Auth};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}