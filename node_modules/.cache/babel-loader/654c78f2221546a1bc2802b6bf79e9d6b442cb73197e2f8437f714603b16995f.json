{"ast":null,"code":"export default {\n  name: \"SignUP\",\n  components: {},\n  data: () => ({\n    agreement: false,\n    valid: true,\n    name: null,\n    surname: null,\n    email: null,\n    profilnaURL: '',\n    form: false,\n    isLoading: false,\n    password: null,\n    date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n    menu: false,\n    modal: false,\n    menu2: false,\n    rules: {\n      email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n      length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n      password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) || 'Password must contain an upper case letter, a numeric character, and a special character',\n      required: v => !!v || 'This field is required'\n    }\n  }),\n  methods: {\n    clearFormData() {\n      this.name = null;\n      this.surname = null;\n      this.email = null;\n      this.password = null;\n      this.birthDate = null;\n      this.date = null;\n    },\n    postActionMoveToView() {\n      this.$router.replace({\n        path: \"/\"\n      });\n    },\n    async UploadImageToStorage() {\n      const storageRef = ref(storage, \"Users/\" + this.email + \"/Profilna Slika/\" + \"Profilna\");\n      await uploadBytes(storageRef, this.$refs.PictureFile.files[0]).then(snapshot => {\n        console.log(\"Upload complete!\");\n        getDownloadURL(snapshot.ref).then(url => {\n          this.profilnaURL = url;\n          this.signup();\n        }).catch(error => {\n          console.error(\"Error getting download URL:\", error);\n        });\n      }).catch(error => {\n        console.error(\"Error uploading image:\", error);\n      });\n    },\n    async saveAdditionalData(user, email, name, surname, birthDate, profilna) {\n      await setDoc(doc(db, \"Users\", email.toLowerCase()), {\n        Email: email,\n        Name: name,\n        Surname: surname,\n        Birthdate: birthDate,\n        Profilna: profilna,\n        AuthorisationType: \"USER\"\n      });\n    },\n    signup() {\n      const email = this.email;\n      const password = this.password;\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        alert(\"Uspješna registracija\");\n        console.log(userCredential);\n        const user = userCredential.user;\n        const name = this.name;\n        const surname = this.surname;\n        const birthDate = this.date;\n        const profilna = this.profilnaURL;\n        this.saveAdditionalData(user, email, name, surname, birthDate, profilna);\n        this.clearFormData();\n        this.postActionMoveToView();\n      }).catch(error => {\n        alert(\"Došlo je do pogreške\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","agreement","valid","surname","email","profilnaURL","form","isLoading","password","date","Date","now","getTimezoneOffset","toISOString","substr","menu","modal","menu2","rules","v","match","length","len","required","methods","clearFormData","birthDate","postActionMoveToView","$router","replace","path","UploadImageToStorage","storageRef","ref","storage","uploadBytes","$refs","PictureFile","files","then","snapshot","console","log","getDownloadURL","url","signup","catch","error","saveAdditionalData","user","profilna","setDoc","doc","db","toLowerCase","Email","Name","Surname","Birthdate","Profilna","AuthorisationType","createUserWithEmailAndPassword","auth","userCredential","alert"],"sources":["src/views/Signup.vue"],"sourcesContent":["<template>\r\n\r\n    <div data-app>\r\n      <div class=\"naslov1\">\r\n        <h1>SignUp</h1>\r\n      </div>\r\n\r\n    <v-card\r\n      class=\"mx-auto\"\r\n      style=\"max-width: 800px; margin-top: 80px; margin-left: auto; margin-right:auto; padding: 30px;\"\r\n    >\r\n\r\n    <v-card-title> Imaš li već račun? <v-btn to=\"/LogIn\" style=\"margin-left:10px; color:black; text-decoration: none;\"> Prijavi se! </v-btn> </v-card-title>\r\n\r\n      <v-form ref=\"form\" v-model=\"form\" style=\"margin-top: 20px;\">\r\n\r\n      <v-text-field\r\n          v-model=\"name\"\r\n          filled\r\n          label=\"Ime\"\r\n          style=\"min-height: 100px;\"\r\n          :rules=\"[rules.required]\"\r\n          type=\"text\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"surname\"\r\n          filled\r\n          color=\"black\"\r\n          label=\"Prezime\"\r\n          style=\"min-height: 100px\"\r\n          :rules=\"[rules.required]\"\r\n          type=\"text\"\r\n        ></v-text-field>\r\n\r\n        <v-dialog\r\n          ref=\"dialog\"\r\n          v-model=\"modal\"\r\n          :return-value.sync=\"date\"\r\n          persistent\r\n          width=\"290px\"\r\n        >\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-text-field\r\n              v-model=\"date\"\r\n              label=\"Odaberite datum rođenja\"\r\n              prepend-icon=\"mdi-calendar\"\r\n              readonly\r\n              v-bind=\"attrs\"\r\n              v-on=\"on\"\r\n            ></v-text-field>\r\n          </template>\r\n          <v-date-picker\r\n            v-model=\"date\"\r\n            scrollable\r\n          >\r\n            <v-spacer></v-spacer>\r\n            <v-btn\r\n              text\r\n              color=\"primary\"\r\n              @click=\"modal = false\"\r\n            >\r\n              Cancel\r\n            </v-btn>\r\n            <v-btn\r\n              text\r\n              color=\"primary\"\r\n              @click=\"$refs.dialog.save(date)\"\r\n            >\r\n              OK\r\n            </v-btn>\r\n          </v-date-picker>\r\n        </v-dialog>\r\n\r\n      <v-text-field\r\n          v-model=\"email\"\r\n          :rules=\"[rules.email, rules.required]\"\r\n          filled\r\n          color=\"black\"\r\n          label=\"Email adresa\"\r\n          style=\"min-height: 100px\"\r\n          type=\"email\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"password\"\r\n          :rules=\"[rules.password, rules.length(6), rules.required]\"\r\n          filled\r\n          color=\"black\"\r\n          counter=\"6\"\r\n          label=\"Lozinka\"\r\n          style=\"min-height: 100px\"\r\n          type=\"password\"\r\n        ></v-text-field>\r\n\r\n        <input \r\n          :rules=\"[rules.required]\"\r\n          class=\"butot\" \r\n          type=\"file\" \r\n          ref=\"PictureFile\" \r\n          />\r\n\r\n        <v-checkbox\r\n          v-model=\"agreement\"\r\n          :rules=\"[rules.required]\"\r\n          color=\"black\"\r\n        >\r\n          <template v-slot:label>\r\n            I agree to the Terms of Service and Privacy Policy\r\n          </template>\r\n        </v-checkbox>\r\n      </v-form>\r\n      <v-divider></v-divider>\r\n      <v-card-actions>\r\n        <v-btn\r\n          style=\"margin-bottom: 10px;\"\r\n          text\r\n          @click=\"$refs.form.reset()\"\r\n        >\r\n          Clear\r\n        </v-btn>\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          type=\"button\"\r\n          :disabled=\"!form\"\r\n          :loading=\"isLoading\"\r\n          class=\"butot\"\r\n          depressed\r\n          @click=\"UploadImageToStorage()\"\r\n        >\r\n          SignUP!\r\n        </v-btn>\r\n      </v-card-actions>\r\n        </v-card>\r\n    </div>\r\n  </template>\r\n\r\n\r\n<script>\r\n\r\n  export default {\r\n    name: \"SignUP\",\r\n    components: {},\r\n    data: () => ({\r\n      agreement: false,\r\n      valid: true,\r\n      name: null,\r\n      surname: null,\r\n      email: null,\r\n      profilnaURL: '',\r\n      form: false,\r\n      isLoading: false,\r\n      password: null,\r\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n      menu: false,\r\n      modal: false,\r\n      menu2: false,\r\n      rules: {\r\n        email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\r\n        length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\r\n        password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\r\n          'Password must contain an upper case letter, a numeric character, and a special character',\r\n        required: v => !!v || 'This field is required',\r\n      },\r\n    }),\r\n\r\n    methods: {\r\n      clearFormData() {\r\n\t\t\t  this.name = null;\r\n\t\t\t  this.surname = null;\r\n\t\t\t  this.email = null;\r\n\t\t\t  this.password = null;\r\n        this.birthDate = null;\r\n        this.date = null;\r\n\t\t},\r\n\r\n    postActionMoveToView() {\r\n\t\t\tthis.$router.replace({ path: \"/\" });\r\n\t\t},\r\n\r\n    async UploadImageToStorage() {\r\n        const storageRef = ref(storage, \"Users/\" + this.email + \"/Profilna Slika/\" + \"Profilna\");\r\n\r\n        await uploadBytes(storageRef, this.$refs.PictureFile.files[0]).then((snapshot) => {\r\n        console.log(\"Upload complete!\");\r\n\r\n          getDownloadURL(snapshot.ref).then((url) => {\r\n            this.profilnaURL = url;\r\n            this.signup();\r\n          }).catch((error) => {\r\n            console.error(\"Error getting download URL:\", error);\r\n          });\r\n        }).catch((error) => {\r\n          console.error(\"Error uploading image:\", error);\r\n        });\r\n    },  \r\n\r\n    async saveAdditionalData(user, email, name, surname, birthDate, profilna) {\r\n\t\t\tawait setDoc(doc(db, \"Users\", email.toLowerCase()), {\r\n\t\t\t\tEmail: email,\r\n\t\t\t\tName: name,\r\n\t\t\t\tSurname: surname,\r\n        Birthdate: birthDate,\r\n        Profilna: profilna,\r\n\t\t\t\tAuthorisationType: \"USER\",\r\n\t\t\t});\r\n\t\t},\r\n    \r\n      signup() {\r\n        const email = this.email;\r\n        const password = this.password;\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n          .then((userCredential) =>{\r\n            alert(\"Uspješna registracija\");\r\n            console.log(userCredential);\r\n            const user = userCredential.user;\r\n            const name = this.name;\r\n            const surname = this.surname;\r\n            const birthDate = this.date;\r\n            const profilna = this.profilnaURL;\r\n            this.saveAdditionalData(user, email, name, surname, birthDate, profilna);\r\n            this.clearFormData();\r\n            this.postActionMoveToView();\r\n          })\r\n          .catch((error) => {\r\n            alert(\"Došlo je do pogreške\", error);\r\n          });\r\n      },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n  .obrub1\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    margin-top: 100px;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .naslov1\r\n  {\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    text-align: center;\r\n    color: white;\r\n    margin-top:120px;\r\n  }\r\n</style>"],"mappings":"AA4IA;EACAA,IAAA;EACAC,UAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,SAAA;IACAC,KAAA;IACAJ,IAAA;IACAK,OAAA;IACAC,KAAA;IACAC,WAAA;IACAC,IAAA;IACAC,SAAA;IACAC,QAAA;IACAC,IAAA,MAAAC,IAAA,CAAAA,IAAA,CAAAC,GAAA,SAAAD,IAAA,GAAAE,iBAAA,YAAAC,WAAA,GAAAC,MAAA;IACAC,IAAA;IACAC,KAAA;IACAC,KAAA;IACAC,KAAA;MACAd,KAAA,EAAAe,CAAA,OAAAA,CAAA,QAAAC,KAAA;MACAC,MAAA,EAAAC,GAAA,IAAAH,CAAA,KAAAA,CAAA,QAAAE,MAAA,IAAAC,GAAA,0CAAAA,GAAA;MACAd,QAAA,EAAAW,CAAA,OAAAA,CAAA,QAAAC,KAAA,yDACA;MACAG,QAAA,EAAAJ,CAAA,MAAAA,CAAA;IACA;EACA;EAEAK,OAAA;IACAC,cAAA;MACA,KAAA3B,IAAA;MACA,KAAAK,OAAA;MACA,KAAAC,KAAA;MACA,KAAAI,QAAA;MACA,KAAAkB,SAAA;MACA,KAAAjB,IAAA;IACA;IAEAkB,qBAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;QAAAC,IAAA;MAAA;IACA;IAEA,MAAAC,qBAAA;MACA,MAAAC,UAAA,GAAAC,GAAA,CAAAC,OAAA,kBAAA9B,KAAA;MAEA,MAAA+B,WAAA,CAAAH,UAAA,OAAAI,KAAA,CAAAC,WAAA,CAAAC,KAAA,KAAAC,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA;QAEAC,cAAA,CAAAH,QAAA,CAAAP,GAAA,EAAAM,IAAA,CAAAK,GAAA;UACA,KAAAvC,WAAA,GAAAuC,GAAA;UACA,KAAAC,MAAA;QACA,GAAAC,KAAA,CAAAC,KAAA;UACAN,OAAA,CAAAM,KAAA,gCAAAA,KAAA;QACA;MACA,GAAAD,KAAA,CAAAC,KAAA;QACAN,OAAA,CAAAM,KAAA,2BAAAA,KAAA;MACA;IACA;IAEA,MAAAC,mBAAAC,IAAA,EAAA7C,KAAA,EAAAN,IAAA,EAAAK,OAAA,EAAAuB,SAAA,EAAAwB,QAAA;MACA,MAAAC,MAAA,CAAAC,GAAA,CAAAC,EAAA,WAAAjD,KAAA,CAAAkD,WAAA;QACAC,KAAA,EAAAnD,KAAA;QACAoD,IAAA,EAAA1D,IAAA;QACA2D,OAAA,EAAAtD,OAAA;QACAuD,SAAA,EAAAhC,SAAA;QACAiC,QAAA,EAAAT,QAAA;QACAU,iBAAA;MACA;IACA;IAEAf,OAAA;MACA,MAAAzC,KAAA,QAAAA,KAAA;MACA,MAAAI,QAAA,QAAAA,QAAA;MACAqD,8BAAA,CAAAC,IAAA,EAAA1D,KAAA,EAAAI,QAAA,EACA+B,IAAA,CAAAwB,cAAA;QACAC,KAAA;QACAvB,OAAA,CAAAC,GAAA,CAAAqB,cAAA;QACA,MAAAd,IAAA,GAAAc,cAAA,CAAAd,IAAA;QACA,MAAAnD,IAAA,QAAAA,IAAA;QACA,MAAAK,OAAA,QAAAA,OAAA;QACA,MAAAuB,SAAA,QAAAjB,IAAA;QACA,MAAAyC,QAAA,QAAA7C,WAAA;QACA,KAAA2C,kBAAA,CAAAC,IAAA,EAAA7C,KAAA,EAAAN,IAAA,EAAAK,OAAA,EAAAuB,SAAA,EAAAwB,QAAA;QACA,KAAAzB,aAAA;QACA,KAAAE,oBAAA;MACA,GACAmB,KAAA,CAAAC,KAAA;QACAiB,KAAA,yBAAAjB,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}