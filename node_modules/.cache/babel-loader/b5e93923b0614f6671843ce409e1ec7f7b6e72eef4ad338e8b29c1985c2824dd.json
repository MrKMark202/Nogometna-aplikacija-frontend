{"ast":null,"code":"import { updateDoc } from 'firebase/firestore/lite';\nexport default {\n  name: \"passReset\",\n  data: () => ({\n    email: null,\n    form: false,\n    password: null,\n    pin: null,\n    rules: {\n      email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n      length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n      password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) || 'Password must contain an upper case letter, a numeric character, and a special character',\n      required: v => !!v || 'This field is required'\n    }\n  }),\n  methods: {\n    async resetPass(user) {\n      try {\n        const documentRef = doc(db, 'Users', user.email);\n        const newData = {};\n        await updateDoc(documentRef, newData);\n        console.log('Data updated successfully.');\n      } catch (error) {\n        console.error('Error updating data', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["updateDoc","name","data","email","form","password","pin","rules","v","match","length","len","required","methods","resetPass","user","documentRef","doc","db","newData","console","log","error"],"sources":["src/views/passReset.vue"],"sourcesContent":["<template>\r\n\r\n    <div>\r\n        <div class=\"naslov2\">\r\n            <h1>Reset your password</h1>\r\n        </div>\r\n\r\n        <v-card\r\n            class=\"mx-auto\"\r\n            style=\"max-width: 500px; margin-top: 80px; margin-left: auto; margin-right:auto; padding: 30px;\"\r\n        >\r\n\r\n            <v-form\r\n                ref=\"form\"\r\n                v-model=\"form\"\r\n                style=\"margin-top: 20px;\"\r\n            >\r\n                <v-text-field\r\n                    v-model=\"email\"\r\n                    :rules=\"[rules.email, rules.required]\"\r\n                    filled\r\n                    color=\"black\"\r\n                    label=\"Email address\"\r\n                    style=\"min-height: 100px\"\r\n                    type=\"email\"\r\n                ></v-text-field>\r\n\r\n                <v-text-field\r\n                    v-model=\"password\"\r\n                    :rules=\"[rules.password, rules.length(6), rules.required]\"\r\n                    filled\r\n                    color=\"black\"\r\n                    label=\"New password\"\r\n                    style=\"min-height: 100px\"\r\n                    type=\"password\"\r\n                ></v-text-field>\r\n\r\n                <v-text-field\r\n                    type=\"password\"\r\n                    v-model=\"pin\"\r\n                    filled\r\n                    color=\"black\"\r\n                    label=\"Insert your PIN\"\r\n                    style=\"min-height: 100px\"\r\n                    :rules=\"[rules.length(4), rules.required]\"\r\n                    counter=\"4\"\r\n                ></v-text-field>\r\n\r\n                <v-card-actions>\r\n                    <v-btn\r\n                        class=\"white--text\"\r\n                        color=\"black\"\r\n                        depressed\r\n                        @click=\"resetPass\"\r\n                    >\r\n                    Reset!\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-form>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\nimport { updateDoc } from 'firebase/firestore/lite';\r\n    export default {\r\n        name: \"passReset\",\r\n        data: () => ({   \r\n            email: null,\r\n            form: false,\r\n            password: null,\r\n            pin: null,\r\n            rules: {\r\n                email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\r\n                length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\r\n                password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\r\n                'Password must contain an upper case letter, a numeric character, and a special character',\r\n                required: v => !!v || 'This field is required',\r\n            },  \r\n        }),\r\n\r\n        methods: {\r\n            async resetPass(user) {\r\n                try {\r\n                    const documentRef = doc(db, 'Users', user.email )\r\n                    const newData = {\r\n\r\n                    };\r\n                    await updateDoc(documentRef, newData);\r\n                    console.log('Data updated successfully.');\r\n                }\r\n                catch (error) {\r\n                    console.error('Error updating data', error);\r\n                }\r\n            },\r\n        },\r\n    }\r\n</script>\r\n    \r\n    <style>\r\n    .naslov2\r\n      {\r\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n        text-align: center;\r\n        color: white;\r\n        margin-top:120px;\r\n      }\r\n      \r\n    </style>"],"mappings":"AAgEA,SAAAA,SAAA;AACA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,KAAA;IACAC,IAAA;IACAC,QAAA;IACAC,GAAA;IACAC,KAAA;MACAJ,KAAA,EAAAK,CAAA,OAAAA,CAAA,QAAAC,KAAA;MACAC,MAAA,EAAAC,GAAA,IAAAH,CAAA,KAAAA,CAAA,QAAAE,MAAA,IAAAC,GAAA,0CAAAA,GAAA;MACAN,QAAA,EAAAG,CAAA,OAAAA,CAAA,QAAAC,KAAA,yDACA;MACAG,QAAA,EAAAJ,CAAA,MAAAA,CAAA;IACA;EACA;EAEAK,OAAA;IACA,MAAAC,UAAAC,IAAA;MACA;QACA,MAAAC,WAAA,GAAAC,GAAA,CAAAC,EAAA,WAAAH,IAAA,CAAAZ,KAAA;QACA,MAAAgB,OAAA,IAEA;QACA,MAAAnB,SAAA,CAAAgB,WAAA,EAAAG,OAAA;QACAC,OAAA,CAAAC,GAAA;MACA,EACA,OAAAC,KAAA;QACAF,OAAA,CAAAE,KAAA,wBAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}