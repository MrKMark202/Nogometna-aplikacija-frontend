{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth, collection, getDocs, setDoc, doc, onAuthStateChanged } from '@/firebase';\nexport default {\n  data() {\n    return {\n      ligas: [],\n      klubs: [],\n      selectedLiga: '',\n      search: '',\n      headers: [{\n        text: 'Pozicija',\n        value: 'pz'\n      }, {\n        text: 'Naziv tima',\n        align: 'start',\n        sortable: false,\n        value: 'nt'\n      }, {\n        text: 'Postignuti pogodci',\n        value: 'pp'\n      }, {\n        text: 'Primljeni golovi',\n        value: 'pg'\n      }, {\n        text: 'Gol razlika',\n        value: 'gr'\n      }, {\n        text: 'Bodovi',\n        value: 'bd'\n      }],\n      podaci: [{\n        pz: \"1.\",\n        nt: \"Hajduk\",\n        pp: 159,\n        pg: 60,\n        gr: 24,\n        bd: 4.0\n      }]\n    };\n  },\n  mounted() {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\n        getDocs(colRef).then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            this.ligas.push(doc.id);\n          });\n        }).catch(error => {\n          console.error(\"Error fetching subcollection documents:\", error);\n        });\n      } else {\n        console.log(\"User is not loged in\");\n      }\n    });\n  },\n  methods: {\n    change() {\n      const colRef = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\");\n      getDocs(colRef).then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          this.klubs.push(doc.id);\n          console.log(this.klubs);\n        });\n      });\n    },\n    changes() {\n      const datas = {};\n      this.klubs.forEach(klub => {\n        const querySnapshot = getDocs(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", klub, \"Tablica lige\"));\n        querySnapshot.forEach(doc => {\n          datas.push(doc.data());\n          console.log(datas);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","auth","collection","getDocs","setDoc","doc","onAuthStateChanged","data","ligas","klubs","selectedLiga","search","headers","text","value","align","sortable","podaci","pz","nt","pp","pg","gr","bd","mounted","user","colRef","email","then","querySnapshot","forEach","push","id","catch","error","console","log","methods","change","currentUser","changes","datas","klub"],"sources":["src/views/Tablica.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        \r\n        <div class=\"naslov\">\r\n            <h1>Tablica</h1>\r\n        </div>\r\n\r\n        <div data-app class=\"obrub1\">\r\n            <v-card-title style=\"font-size:30px; color: black; font-weight: bold;\">\r\n                <v-select\r\n                  :items=\"ligas\"\r\n                  @change=\"change\"\r\n                  label=\"Izaberite ligu za prikazati\"\r\n                  v-model=\"selectedLiga\"\r\n                ></v-select>\r\n\r\n                <v-spacer></v-spacer>\r\n\r\n                <v-btn @click=\"changes\"></v-btn>\r\n                \r\n                <v-text-field\r\n                v-model=\"search\"\r\n                append-icon=\"mdi-magnify\"\r\n                label=\"Search\"\r\n                single-line\r\n                hide-details\r\n                ></v-text-field>\r\n            </v-card-title>\r\n\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"podaci\"\r\n                :search=\"search\"\r\n                style=\"font-weight: bold; text-align: center;\"\r\n            ></v-data-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, auth, collection, getDocs, setDoc, doc, onAuthStateChanged} from '@/firebase';\r\n  export default {\r\n    data () {\r\n      return {\r\n        ligas: [],\r\n        klubs:[],\r\n        selectedLiga: '',\r\n        search: '',\r\n        headers: [\r\n            { text: 'Pozicija', value: 'pz'},\r\n            {\r\n                text: 'Naziv tima',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'nt',\r\n            },\r\n            { text: 'Postignuti pogodci', value: 'pp' },\r\n            { text: 'Primljeni golovi', value: 'pg' },\r\n            { text: 'Gol razlika', value: 'gr'},\r\n            { text: 'Bodovi', value: 'bd'},\r\n        ],\r\n        podaci: [\r\n          {\r\n            pz: \"1.\",\r\n            nt: \"Hajduk\",\r\n            pp: 159,\r\n            pg: 60,\r\n            gr: 24,\r\n            bd: 4.0,\r\n          },\r\n        ],\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      onAuthStateChanged(auth, (user) => {\r\n\t\t\tif (user) {\r\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\r\n        getDocs(colRef)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n            this.ligas.push(doc.id); \r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching subcollection documents:\", error);\r\n        });\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"User is not loged in\");\r\n\t\t\t}\r\n\t\t});\r\n    },\r\n\r\n    methods: {\r\n\r\n      change() {\r\n            const colRef = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\");\r\n            getDocs(colRef)\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                    this.klubs.push(doc.id);\r\n                    console.log(this.klubs);\r\n\r\n                });\r\n          });\r\n      },\r\n\r\n      changes() {\r\n          const datas = {};\r\n          this.klubs.forEach(klub => {\r\n            const querySnapshot = getDocs (collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", klub, \"Tablica lige\"));\r\n            querySnapshot.forEach((doc) => {\r\n            datas.push(doc.data()); \r\n            console.log(datas); \r\n            });\r\n          });\r\n        }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n    .obrub1\r\n    {\r\n        border: 2px solid white;\r\n        background-color: white;\r\n        padding: 50px;\r\n        margin-left: 200px;\r\n        margin-right: 200px;\r\n        margin-top: 100px;\r\n        margin-bottom: 100px;\r\n    }\r\n\r\n</style>"],"mappings":";AAwCA,SAAAA,EAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,kBAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,KAAA;MACAC,YAAA;MACAC,MAAA;MACAC,OAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QACAD,IAAA;QACAE,KAAA;QACAC,QAAA;QACAF,KAAA;MACA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAG,MAAA,GACA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;MACA;IAEA;EACA;EAEAC,QAAA;IACAlB,kBAAA,CAAAL,IAAA,EAAAwB,IAAA;MACA,IAAAA,IAAA;QACA,MAAAC,MAAA,GAAAxB,UAAA,CAAAF,EAAA,WAAAyB,IAAA,CAAAE,KAAA;QACAxB,OAAA,CAAAuB,MAAA,EACAE,IAAA,CAAAC,aAAA;UACAA,aAAA,CAAAC,OAAA,CAAAzB,GAAA;YACA,KAAAG,KAAA,CAAAuB,IAAA,CAAA1B,GAAA,CAAA2B,EAAA;UACA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,4CAAAA,KAAA;QACA;MACA;QACAC,OAAA,CAAAC,GAAA;MACA;IACA;EACA;EAEAC,OAAA;IAEAC,OAAA;MACA,MAAAZ,MAAA,GAAAxB,UAAA,CAAAF,EAAA,WAAAC,IAAA,CAAAsC,WAAA,CAAAZ,KAAA,eAAAjB,YAAA;MACAP,OAAA,CAAAuB,MAAA,EACAE,IAAA,CAAAC,aAAA;QACAA,aAAA,CAAAC,OAAA,CAAAzB,GAAA;UACA,KAAAI,KAAA,CAAAsB,IAAA,CAAA1B,GAAA,CAAA2B,EAAA;UACAG,OAAA,CAAAC,GAAA,MAAA3B,KAAA;QAEA;MACA;IACA;IAEA+B,QAAA;MACA,MAAAC,KAAA;MACA,KAAAhC,KAAA,CAAAqB,OAAA,CAAAY,IAAA;QACA,MAAAb,aAAA,GAAA1B,OAAA,CAAAD,UAAA,CAAAF,EAAA,WAAAC,IAAA,CAAAsC,WAAA,CAAAZ,KAAA,eAAAjB,YAAA,aAAAgC,IAAA;QACAb,aAAA,CAAAC,OAAA,CAAAzB,GAAA;UACAoC,KAAA,CAAAV,IAAA,CAAA1B,GAAA,CAAAE,IAAA;UACA4B,OAAA,CAAAC,GAAA,CAAAK,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}