{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth, collection, getDocs, onAuthStateChanged, deleteDoc, doc } from '@/firebase';\nexport default {\n  data() {\n    return {\n      ligas: [],\n      dataLigas: [],\n      klubs: [],\n      datas: [],\n      selectedLiga: '',\n      selectedKlub: '',\n      search: '',\n      selectedImageURL: '',\n      headers: [{\n        text: 'Pozicija',\n        value: 'pz'\n      }, {\n        text: 'Grb',\n        value: 'grb'\n      }, {\n        text: 'Naziv tima',\n        align: 'start',\n        value: 'nt'\n      }, {\n        text: 'Postignuti pogodci',\n        value: 'pp'\n      }, {\n        text: 'Primljeni golovi',\n        value: 'pg'\n      }, {\n        text: 'Gol razlika',\n        value: 'gr'\n      }, {\n        text: 'Bodovi',\n        value: 'bd',\n        sortable: true\n      }],\n      podaci: []\n    };\n  },\n  mounted() {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\n        getDocs(colRef).then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            this.ligas.push(doc.id);\n          });\n        }).catch(error => {\n          console.error(\"Error fetching subcollection documents:\", error);\n        });\n      } else {\n        console.log(\"User is not loged in\");\n      }\n      this.dohvatPodatakaLige();\n    });\n  },\n  methods: {\n    async dohvatPodatakaLige() {\n      this.dataLigas = [];\n      const a = collection(db, \"Users\", auth.currentUser.email, \"Lige\");\n      await getDocs(a).then(querySnapshot => {\n        querySnapshot.docs.forEach(doc => {\n          this.dataLigas.push({\n            liga: doc.id,\n            data: doc.data()\n          });\n        });\n      });\n    },\n    async loadLeagueImage() {\n      if (this.selectedLiga) {\n        const selectedLigaData = this.dataLigas.find(liga => liga.liga === this.selectedLiga);\n        if (selectedLigaData && selectedLigaData.data.imageURL) {\n          this.selectedImageURL = selectedLigaData.data.imageURL;\n          console.log(this.selectedImageURL);\n        } else {}\n      } else {}\n    },\n    async dohvatKlubova() {\n      this.klubs = [];\n      const colRef = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\");\n      await getDocs(colRef).then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          this.klubs.push(doc.id);\n        });\n      });\n      this.dohvatPodatakaKlubova();\n    },\n    dohvatPodatakaKlubova() {\n      this.datas = [];\n      this.klubs.forEach(klub => {\n        const q = getDocs(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", klub, \"Tablica lige\"));\n        q.then(querySnapshot => {\n          querySnapshot.docs.forEach(doc => {\n            this.datas.push({\n              klub: klub,\n              data: doc.data()\n            });\n          });\n          this.dohvatPodatakaZATablicu();\n        });\n      });\n    },\n    dohvatPodatakaZATablicu() {\n      this.podaci = [];\n      const sortedDatas = [...this.datas];\n      sortedDatas.sort((a, b) => {\n        return b.data.Bodovi - a.data.Bodovi;\n      });\n      sortedDatas.forEach((item, index) => {\n        this.podaci.push({\n          pz: index + 1,\n          nt: item.klub,\n          pp: item.data.Postignutih_pogodaka,\n          pg: item.data.Primljenih_pogodaka,\n          gr: item.data.Postignutih_pogodaka - item.data.Primljenih_pogodaka,\n          bd: item.data.Bodovi\n        });\n      });\n    },\n    async izbrisiLigu() {\n      if (!this.selectedLiga) {\n        alert(\"Prvo izaberite ligu\");\n      } else {\n        const documentRef = doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga);\n        try {\n          if (confirm(\"Jeste li sigurni da želite izbridati ligu\")) {\n            await deleteDoc(documentRef);\n            console.log('Document deleted successfully');\n            window.location.reload();\n          }\n        } catch (error) {\n          console.error('Error deleting document:', error);\n        }\n      }\n    },\n    async izbrisiKlub() {\n      if (!this.selectedLiga) {\n        alert(\"Prvo izaberite ligu da bi ste mogli klub!\");\n      } else {\n        const documentRef = doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", this.selectedKlub);\n        try {\n          if (confirm(\"Jeste li sigurni da želite izbridati klub\")) {\n            await deleteDoc(documentRef);\n            console.log('Document deleted successfully');\n            window.location.reload();\n          }\n        } catch (error) {\n          console.error('Error deleting document:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","auth","collection","getDocs","onAuthStateChanged","deleteDoc","doc","data","ligas","dataLigas","klubs","datas","selectedLiga","selectedKlub","search","selectedImageURL","headers","text","value","align","sortable","podaci","mounted","user","colRef","email","then","querySnapshot","forEach","push","id","catch","error","console","log","dohvatPodatakaLige","methods","a","currentUser","docs","liga","loadLeagueImage","selectedLigaData","find","imageURL","dohvatKlubova","dohvatPodatakaKlubova","klub","q","dohvatPodatakaZATablicu","sortedDatas","sort","b","Bodovi","item","index","pz","nt","pp","Postignutih_pogodaka","pg","Primljenih_pogodaka","gr","bd","izbrisiLigu","alert","documentRef","confirm","window","location","reload","izbrisiKlub"],"sources":["src/views/Tablica.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div data-app class=\"obrub1\">\r\n        <v-row >\r\n          <v-col cols=\"2\" v-if=\"selectedImageURL\">\r\n            <v-img :src=\"selectedImageURL\" v-if=\"selectedImageURL\" class=\"image-box\"></v-img>\r\n          </v-col>\r\n          \r\n          <v-col cols=\"4\" >\r\n            <div class=\"naslov\" style=\"color: black !important; margin-top: 0px !important\">\r\n              <h1>Tablica</h1>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n       \r\n        <div class=\"grid-container2\">\r\n          <v-btn class=\"grid-item4\" @click=\"izbrisiLigu()\" elevation=\"2\" style=\"background-color: red; color: white; margin-top:40px; font-size: 30px;\">Izbriši ligu!</v-btn>\r\n          <v-btn class=\"grid-item4\" @click=\"izbrisiKlub()\" elevation=\"2\" style=\"background-color: red; color: white; margin-top:40px; font-size: 30px;\">Izbriši klub!</v-btn>\r\n            <v-select\r\n              class=\"grid-item4\"\r\n              :items=\"ligas\"\r\n              @change=\"dohvatKlubova(), loadLeagueImage()\"\r\n              label=\"Izaberite ligu za prikazati!\"\r\n              v-model=\"selectedLiga\"\r\n              style=\"width: 350px;\"\r\n            ></v-select>\r\n\r\n            <v-select\r\n              class=\"grid-item4\"\r\n              :items=\"klubs\"\r\n              label=\"Izaberite klub!\"\r\n              v-model=\"selectedKlub\"\r\n              style=\"width: 350px;\"\r\n              ></v-select>\r\n        </div>\r\n                \r\n        <v-text-field\r\n          v-model=\"search\"\r\n          append-icon=\"mdi-magnify\"\r\n          label=\"Search\"\r\n          single-line\r\n          hide-details\r\n          class=\"search\"\r\n        ></v-text-field>\r\n            \r\n\r\n        <v-data-table\r\n          :headers=\"headers\"\r\n          :items=\"podaci\"\r\n          :search=\"search\"\r\n          style=\"font-weight: bold; text-align: center;\"\r\n          item-key=\"name\"\r\n          class=\"elevation-1\"\r\n          loading\r\n          loading-text=\"Izaberite ligu!\"\r\n        ></v-data-table>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, auth, collection, getDocs, onAuthStateChanged, deleteDoc, doc } from '@/firebase';\r\n  export default {\r\n    data () {\r\n      return {\r\n        ligas: [],\r\n        dataLigas: [],\r\n        klubs:[],\r\n        datas: [],\r\n        selectedLiga: '',\r\n        selectedKlub: '',\r\n        search: '',\r\n        selectedImageURL: '',\r\n        headers: [\r\n            { text: 'Pozicija', value: 'pz'},\r\n            { text: 'Grb', value: 'grb'},\r\n            {\r\n                text: 'Naziv tima',\r\n                align: 'start',\r\n                value: 'nt',\r\n            },\r\n            { text: 'Postignuti pogodci', value: 'pp' },\r\n            { text: 'Primljeni golovi', value: 'pg' },\r\n            { text: 'Gol razlika', value: 'gr'},\r\n            { text: 'Bodovi', value: 'bd', sortable: true},\r\n        ],\r\n        podaci: [],\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      onAuthStateChanged(auth, (user) => {\r\n\t\t\tif (user) {\r\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\r\n        getDocs(colRef)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n            this.ligas.push(doc.id);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching subcollection documents:\", error);\r\n        });\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"User is not loged in\");\r\n\t\t\t}\r\n      this.dohvatPodatakaLige();\r\n\t\t});\r\n    },\r\n\r\n    methods: {\r\n      async dohvatPodatakaLige() {\r\n        this.dataLigas = [];\r\n          const a = collection(db, \"Users\", auth.currentUser.email, \"Lige\");\r\n          await getDocs(a)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.dataLigas.push({liga: doc.id, data: doc.data()});\r\n            });\r\n          });\r\n      },\r\n\r\n      async loadLeagueImage() {\r\n     \r\n      if (this.selectedLiga) {\r\n        const selectedLigaData = this.dataLigas.find(liga => liga.liga === this.selectedLiga);\r\n        if (selectedLigaData && selectedLigaData.data.imageURL) {\r\n          this.selectedImageURL = selectedLigaData.data.imageURL;\r\n          console.log(this.selectedImageURL)\r\n        } else {\r\n        \r\n        }\r\n      } else {\r\n       \r\n      }\r\n    },\r\n\r\n\r\n      async dohvatKlubova() {\r\n        this.klubs = [];\r\n        const colRef = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\");\r\n        await getDocs(colRef)\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            this.klubs.push(doc.id);\r\n          });\r\n        });\r\n        this.dohvatPodatakaKlubova();\r\n      },\r\n\r\n      dohvatPodatakaKlubova() {\r\n        this.datas = [];\r\n        this.klubs.forEach(klub => {\r\n          const q =  getDocs(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", klub, \"Tablica lige\"));\r\n          q.then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.datas.push({klub: klub , data: doc.data()});\r\n            });\r\n            this.dohvatPodatakaZATablicu();\r\n          });\r\n        }) \r\n      },\r\n\r\n      dohvatPodatakaZATablicu () {\r\n        this.podaci = [];\r\n        const sortedDatas = [...this.datas];\r\n        sortedDatas.sort((a, b) => {\r\n          return b.data.Bodovi - a.data.Bodovi;\r\n        });\r\n\r\n        sortedDatas.forEach((item, index) => {\r\n          this.podaci.push({\r\n            pz: index + 1,\r\n            nt: item.klub,\r\n            pp: item.data.Postignutih_pogodaka,\r\n            pg: item.data.Primljenih_pogodaka,\r\n            gr: item.data.Postignutih_pogodaka - item.data.Primljenih_pogodaka,\r\n            bd: item.data.Bodovi,\r\n          });\r\n        });\r\n      },\r\n\r\n      async izbrisiLigu() {\r\n        if(!this.selectedLiga) {\r\n          alert(\"Prvo izaberite ligu\");\r\n        }\r\n        else {\r\n          const documentRef = doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga);\r\n\r\n          try {\r\n            if(confirm(\"Jeste li sigurni da želite izbridati ligu\")) {\r\n              await deleteDoc(documentRef);\r\n              console.log('Document deleted successfully');\r\n              window.location.reload();\r\n            }\r\n          } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n          }\r\n        }\r\n      },\r\n\r\n      async izbrisiKlub() {\r\n        if(!this.selectedLiga) {\r\n          alert(\"Prvo izaberite ligu da bi ste mogli klub!\");\r\n        }\r\n        else {\r\n          const documentRef = doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", this.selectedKlub);\r\n\r\n          try {\r\n            if(confirm(\"Jeste li sigurni da želite izbridati klub\")) {\r\n              await deleteDoc(documentRef);\r\n              console.log('Document deleted successfully');\r\n              window.location.reload();\r\n            }\r\n          } catch (error) {\r\n            console.error('Error deleting document:', error);\r\n          }\r\n        }\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .obrub1\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .grid-container2 {\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    background-color: white;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n  }\r\n  .grid-item4 {\r\n    background-color: white;\r\n    padding: 20px;\r\n  }\r\n  .search {\r\n    margin-left: 30%;\r\n    margin-right: 30%;\r\n    margin-bottom: 30px;\r\n  }\r\n  .image-box {\r\n  width: 200px;\r\n  height: 200px; \r\n  } \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}