{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Auth } from '@/components/registracija';\nexport default {\n  data() {\n    return {\n      auth: Auth.state,\n      search: '',\n      selectedLiga: '',\n      selectedImageURL: '',\n      domacin: '',\n      gosti: '',\n      ligas: [],\n      headers: [{\n        text: 'Kolo',\n        value: 'kl'\n      }, {\n        text: 'Domacin',\n        value: 'dm'\n      }, {\n        text: 'Golovi domačina',\n        value: 'gd'\n      }, {\n        text: \":\",\n        value: 'i'\n      }, {\n        text: 'Golovi gostiju',\n        value: 'gg'\n      }, {\n        text: 'Gosti',\n        value: 'gs'\n      }, {\n        text: 'Liga',\n        value: 'lg'\n      }, {\n        text: 'Mjesto',\n        value: 'ms'\n      }, {\n        text: 'Stadion',\n        value: 'std'\n      }, {\n        text: 'Gledatelji',\n        value: 'gl'\n      }, {\n        text: 'Datum',\n        value: 'dt'\n      }],\n      podaci: [],\n      polje1: [],\n      klubs: [],\n      domaciTim: [],\n      gostiTim: []\n    };\n  },\n  mounted() {\n    this.dohvatiLige();\n  },\n  methods: {\n    async dohvatiLige() {\n      try {\n        const userEmail = this.auth.userEmail;\n        const response = await axios.get(`http://localhost:10000/api/liga/dohvat?email=${userEmail}`);\n        if (response.status !== 200) {\n          throw new Error('Network response was not ok');\n        }\n        this.ligas = response.data;\n      } catch (error) {\n        console.error('Greška prilikom dohvaćanja liga:', error);\n      }\n    },\n    async dohvatiUtakmice() {\n      try {\n        const userEmail = this.auth.userEmail;\n        const userLiga = this.selectedLiga;\n        const response = await axios.get(`http://localhost:10000/api/utakmica/dohvat?email=${userEmail}&liga=${userLiga}`);\n        if (response.status !== 200) {\n          throw new Error('Network response was not ok');\n        }\n        this.polje1 = response.data;\n      } catch (error) {\n        console.error('Greška prilikom dohvaćanja zapisa svih utakmica:', error);\n      }\n      this.dohvatPodatakaUtakmice();\n    },\n    async dohvatiKlubove() {\n      this.klubs = [];\n      this.domaciTim = [];\n      try {\n        const userEmail = this.auth.userEmail;\n        const userLiga = this.selectedLiga;\n        const response = await axios.get(`http://localhost:10000/api/klub/dohvat?email=${userEmail}&liga=${userLiga}`);\n        if (response.status !== 200) {\n          throw new Error('Network response was not ok');\n        }\n        this.klubs = response.data;\n        this.gostiTim = this.klubs;\n      } catch (error) {\n        console.error('Greška prilikom dohvaćanja klubova:', error);\n      }\n    },\n    domaciDohvat() {\n      this.domaciTim = this.klubs.filter(klub => klub !== this.domacin);\n    },\n    gostiDohvat() {\n      this.gostiTim = this.klubs.filter(klub => klub !== this.gosti);\n    },\n    dohvatPodatakaUtakmice() {\n      this.podaci = [];\n      this.polje1.forEach(item => {\n        this.podaci.push({\n          kl: item.kolo,\n          dm: item.Domacin,\n          gd: item.domacinGol,\n          i: \":\",\n          gg: item.gostiGol,\n          gs: item.Gosti,\n          lg: item.Liga,\n          ms: item.mjestoIgranja,\n          std: item.stadionNaziv,\n          gl: item.gledateljiBroj,\n          dt: item.datum\n        });\n      });\n    },\n    async deleteUtakmica() {\n      if (!this.selectedLiga) {\n        alert(\"Prvo izaberite ligu\");\n      } else {\n        try {\n          if (confirm(\"Jeste li sigurni da želite izbridati utakmicu?\")) {\n            let response = await axios.patch(\"http://localhost:10000/api/utakmica/delete\", {\n              liga: this.izabranaLiga,\n              domacin: this.domacin,\n              gost: this.gosti,\n              korisnik: this.auth.userEmail\n            });\n            console.log('Document deleted successfully');\n            window.location.reload();\n          }\n        } catch (error) {\n          console.error('Error deleting document:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Auth","data","auth","state","search","selectedLiga","selectedImageURL","domacin","gosti","ligas","headers","text","value","podaci","polje1","klubs","domaciTim","gostiTim","mounted","dohvatiLige","methods","userEmail","response","get","status","Error","error","console","dohvatiUtakmice","userLiga","dohvatPodatakaUtakmice","dohvatiKlubove","domaciDohvat","filter","klub","gostiDohvat","forEach","item","push","kl","kolo","dm","Domacin","gd","domacinGol","i","gg","gostiGol","gs","Gosti","lg","Liga","ms","mjestoIgranja","std","stadionNaziv","gl","gledateljiBroj","dt","datum","deleteUtakmica","alert","confirm","patch","liga","izabranaLiga","gost","korisnik","log","window","location","reload"],"sources":["src/views/TekmaPodaci.vue"],"sourcesContent":["<template>\r\n    <div data-app class=\"obrub1\">\r\n        <v-row >\r\n          <v-col cols=\"2\" v-if=\"selectedImageURL\">\r\n            <v-img :src=\"selectedImageURL\" v-if=\"selectedImageURL\" class=\"image-box\"></v-img>\r\n          </v-col>\r\n          \r\n          <v-col cols=\"4\" >\r\n            <div class=\"naslov\" style=\"color: black !important; margin-top: 0px !important;\">\r\n              <h2>Pregled utakmica</h2>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n\r\n            <v-btn @click=\"deleteUtakmica()\" class=\"deleteBtn\">Izbriši utakmicu</v-btn>\r\n\r\n            <v-select\r\n              label=\"Izaberite ligu za prikazati!\"\r\n              v-model=\"selectedLiga\"\r\n              @change=\"dohvatiUtakmice(), dohvatiKlubove()\"\r\n              style=\"width: 40%; margin-left: 30%;\"\r\n              :items=\"ligas\"\r\n            ></v-select>\r\n\r\n            <v-select\r\n              label=\"Izaberite prvi klub!\"\r\n              v-model=\"domacin\"\r\n              style=\"width: 40%; margin-left: 30%;\"\r\n              :items=\"gostiTim\"\r\n            ></v-select>\r\n\r\n            <v-select\r\n              label=\"Izaberite drugi klub!\"\r\n              v-model=\"gosti\"\r\n              style=\"width: 40%; margin-left: 30%;\"\r\n              :items=\"domaciTim\"\r\n            ></v-select>\r\n                \r\n            <v-text-field\r\n                v-model=\"search\"\r\n                append-icon=\"mdi-magnify\"\r\n                label=\"Search\"\r\n                single-line\r\n                hide-details\r\n                class=\"search\"\r\n            ></v-text-field>\r\n            \r\n\r\n            <v-data-table\r\n                :search=\"search\"\r\n                :headers=\"headers\"\r\n                :items=\"podaci\"\r\n                style=\"font-weight: bold; text-align: center;\"\r\n                class=\"elevation-1\"\r\n            >\r\n            </v-data-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios';\r\n  import { Auth } from '@/components/registracija';\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        auth: Auth.state,\r\n        search: '',\r\n        selectedLiga: '',\r\n        selectedImageURL: '',\r\n        domacin: '',\r\n        gosti: '',\r\n        ligas: [],\r\n        headers: [\r\n            { text: 'Kolo', value: 'kl'},\r\n            { text: 'Domacin', value: 'dm'},\r\n            { text: 'Golovi domačina', value: 'gd'},\r\n            { text: \":\", value: 'i'},\r\n            { text: 'Golovi gostiju', value: 'gg'},\r\n            { text: 'Gosti', value: 'gs'},\r\n            { text: 'Liga', value: 'lg' },\r\n            { text: 'Mjesto', value: 'ms' },\r\n            { text: 'Stadion', value: 'std' },\r\n            { text: 'Gledatelji', value: 'gl' },\r\n            { text: 'Datum', value: 'dt' },\r\n        ],\r\n        podaci: [],\r\n        polje1: [],\r\n        klubs: [],\r\n        domaciTim: [],\r\n        gostiTim: []\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.dohvatiLige();\r\n    },\r\n\r\n    methods: {\r\n      async dohvatiLige() {\r\n        try {\r\n          const userEmail = this.auth.userEmail;\r\n          const response = await axios.get(`http://localhost:10000/api/liga/dohvat?email=${userEmail}`);\r\n          if (response.status !== 200) {\r\n             throw new Error('Network response was not ok');\r\n        } \r\n        this.ligas = response.data\r\n        } catch (error) {\r\n          console.error('Greška prilikom dohvaćanja liga:', error);\r\n        }\r\n      },\r\n\r\n      async dohvatiUtakmice() {\r\n        try {\r\n          const userEmail = this.auth.userEmail;\r\n          const userLiga = this.selectedLiga;\r\n          const response = await axios.get(`http://localhost:10000/api/utakmica/dohvat?email=${userEmail}&liga=${userLiga}`);\r\n          if (response.status !== 200) {\r\n             throw new Error('Network response was not ok');\r\n        } \r\n        this.polje1 = response.data\r\n        } catch (error) {\r\n          console.error('Greška prilikom dohvaćanja zapisa svih utakmica:', error);\r\n        }\r\n        this.dohvatPodatakaUtakmice();\r\n      },\r\n\r\n      async dohvatiKlubove() {\r\n        this.klubs=[];\r\n        this.domaciTim=[];\r\n        try {\r\n          const userEmail = this.auth.userEmail;\r\n          const userLiga = this.selectedLiga;\r\n          const response = await axios.get(`http://localhost:10000/api/klub/dohvat?email=${userEmail}&liga=${userLiga}`);\r\n          if (response.status !== 200) {\r\n            throw new Error('Network response was not ok');\r\n          } \r\n            this.klubs = response.data\r\n            this.gostiTim = this.klubs;\r\n          } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja klubova:', error);\r\n          }\r\n      },\r\n\r\n      domaciDohvat() {\r\n        this.domaciTim = this.klubs.filter((klub) => klub !== this.domacin);\r\n      },\r\n\r\n      gostiDohvat() {\r\n        this.gostiTim = this.klubs.filter((klub) => klub !== this.gosti);\r\n      },\r\n\r\n\r\n      dohvatPodatakaUtakmice() {\r\n        this.podaci = [];\r\n\r\n        this.polje1.forEach((item) => {\r\n          this.podaci.push({\r\n            kl: item.kolo,\r\n            dm: item.Domacin,\r\n            gd: item.domacinGol,\r\n            i: \":\",\r\n            gg: item.gostiGol,\r\n            gs: item.Gosti,\r\n            lg: item.Liga,\r\n            ms: item.mjestoIgranja,\r\n            std: item.stadionNaziv,\r\n            gl: item.gledateljiBroj,\r\n            dt: item.datum\r\n          });\r\n        });\r\n      },\r\n\r\n      async deleteUtakmica() {\r\n\r\n        if(!this.selectedLiga) {\r\n            alert(\"Prvo izaberite ligu\");\r\n            }\r\n            else {\r\n            try {\r\n                if(confirm(\"Jeste li sigurni da želite izbridati utakmicu?\")) {\r\n                  let response = await axios.patch(\"http://localhost:10000/api/utakmica/delete\", {\r\n                    liga: this.izabranaLiga,\r\n                    domacin: this.domacin,\r\n                    gost: this.gosti,\r\n                    korisnik: this.auth.userEmail\r\n                })\r\n                console.log('Document deleted successfully');\r\n                window.location.reload();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error deleting document:', error);\r\n            }\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .obrub1\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .search {\r\n    margin-left: 30%;\r\n    margin-right: 30%;\r\n    margin-bottom: 30px;\r\n  }\r\n  .image-box {\r\n  width: 200px;\r\n  height: 200px; \r\n  } \r\n\r\n  .deleteBtn {\r\n    background-color: red !important;\r\n    color: white; \r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    margin-left: 37%;\r\n    font-size: 30px;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}