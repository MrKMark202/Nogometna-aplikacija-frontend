{"ast":null,"code":"import { db, collection, query, onSnapshot } from '@/firebase';\nexport default {\n  data: () => ({\n    clubName: null,\n    clubCountry: null,\n    clubYear: null,\n    ligas: [],\n    selectedLiga: ''\n  }),\n  methods: {\n    clearFormData() {\n      this.clubName = null;\n      this.clubYear = null;\n      this.clubCountry = null;\n    },\n    UploadImageToStorage() {\n      console.log(\"uplodaing...\");\n      const storageRef = ref(storage, \"Users/\" + auth.currentUser.email + \"/ClubPicture/picture\");\n      console.log(this.$refs.myfile.files);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(console.log(\"done!\"));\n    },\n    /*\r\n            async createKlub() {\r\n                await setDoc(\r\n                doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.ligaName, \"Klubovi\", this.clubName),\r\n                    {\r\n                        clubName: this.clubName,\r\n                        clubYear: this.clubYear,\r\n                        clubCountry: this.clubCountry\r\n                    }\r\n                );\r\n                this.clearFormData();\r\n            },\r\n    */\n    createC() {\n      if (this.selectedLiga) {\n        const clubsRef = collection(db, \"Users\", this.selectedLiga, \"Klubovi\", this.clubName);\n        // Perform necessary operations with the clubsRef, such as creating documents or adding data.\n        console.log('Subcollection created:', clubsRef.path);\n      }\n    }\n  },\n  mounted() {\n    const ligasCollection = collection(db, 'ligas');\n    onSnapshot(ligasCollection, snapshot => {\n      this.ligas = snapshot.docs.map(doc => ({\n        id: doc.id,\n        name: doc.data().name\n      }));\n    });\n  }\n};","map":{"version":3,"names":["db","collection","query","onSnapshot","data","clubName","clubCountry","clubYear","ligas","selectedLiga","methods","clearFormData","UploadImageToStorage","console","log","storageRef","ref","storage","auth","currentUser","email","$refs","myfile","files","uploadBytes","then","createC","clubsRef","path","mounted","ligasCollection","snapshot","docs","map","doc","id","name"],"sources":["src/views/KreirajKLUB.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"naslov\">\r\n            <h1>Kreiraj klub</h1>\r\n        </div>\r\n    \r\n        <div class=\"obrub\">\r\n            <v-text-field v-model=\"clubName\" label=\"Naziv kluba\" variant=\"underlined\"></v-text-field>\r\n            <v-text-field v-model=\"clubYear\" label=\"Godina osnivanja\" variant=\"underlined\"></v-text-field>\r\n            <v-text-field v-model=\"clubCountry\" label=\"DrÅ¾ava\" variant=\"underlined\"></v-text-field>\r\n\r\n            <v-row class=\"row2\">\r\n              <v-col>\r\n                  <div>\r\n                      <h5 style=\"font-size: 20px; margin-bottom: 10px;\">Liga u kojoj se klub nalazi</h5>\r\n                      <label for=\"klub\"></label>\r\n                      <select id=\"liga\" v-model=\"selectedLiga\" @change=\"createC\" class=\"select2\">\r\n                          <option value=\"\">Select Liga</option>\r\n                          <option v-for=\"liga in ligas\" :key=\"liga.id\" :value=\"liga.id\">{{ liga.name }}</option>\r\n                      </select>\r\n                      <br><br>\r\n                  </div>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <h3 class=\"grb\">Grb Lige</h3>\r\n\r\n            <input \r\n                class=\"butot\" \r\n                type=\"file\" \r\n                ref=\"myfile\" \r\n            />\r\n\r\n            <v-btn @click=\"createC()\" elevation=\"2\" style=\"background-color: green; color: white; margin-top:40px; margin-left: 85% !important;\">Kreiraj!</v-btn>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, collection, query, onSnapshot} from '@/firebase';\r\n  export default {\r\n    data: () => ({\r\n      clubName: null,\r\n      clubCountry: null,\r\n      clubYear: null,\r\n      ligas: [],\r\n      selectedLiga: '',\r\n    }),\r\n\r\n    methods: {\r\n      clearFormData() {\r\n\t\t\t  this.clubName = null;\r\n\t\t\t  this.clubYear = null;\r\n\t\t\t  this.clubCountry = null;\r\n\t\t},\r\n\r\n        UploadImageToStorage() {\r\n            console.log(\"uplodaing...\");\r\n            const storageRef = ref(storage, \"Users/\"+auth.currentUser.email+\"/ClubPicture/picture\");\r\n            console.log(this.$refs.myfile.files);\r\n            uploadBytes(storageRef, this.$refs.myfile.files[0]).then(\r\n                console.log(\"done!\")\r\n            );\r\n        },\r\n/*\r\n        async createKlub() {\r\n            await setDoc(\r\n            doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.ligaName, \"Klubovi\", this.clubName),\r\n                {\r\n                    clubName: this.clubName,\r\n                    clubYear: this.clubYear,\r\n                    clubCountry: this.clubCountry\r\n                }\r\n            );\r\n            this.clearFormData();\r\n        },\r\n*/\r\n        createC() {\r\n          if (this.selectedLiga) {\r\n            const clubsRef = collection(db, \"Users\", this.selectedLiga, \"Klubovi\", this.clubName);\r\n            // Perform necessary operations with the clubsRef, such as creating documents or adding data.\r\n            console.log('Subcollection created:', clubsRef.path);\r\n          }\r\n        },\r\n  },\r\n\r\n  mounted() {\r\n    const ligasCollection = collection(db, 'ligas');\r\n    onSnapshot(ligasCollection, (snapshot) => {\r\n      this.ligas = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        name: doc.data().name,\r\n      }));\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n  .obrub\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 20%;\r\n    margin-right: 20%;\r\n    margin-top: 100px; \r\n  }\r\n\r\n  .v-text-field\r\n  {\r\n    font-size: 20px;\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .select2\r\n  {\r\n    font-size: 30px; \r\n    text-align: center;\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    border: 2px solid black;\r\n  }\r\n\r\n  .row2\r\n  {\r\n    color: black;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n</style>"],"mappings":"AAuCA,SAAAA,EAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,UAAA;AACA;EACAC,IAAA,EAAAA,CAAA;IACAC,QAAA;IACAC,WAAA;IACAC,QAAA;IACAC,KAAA;IACAC,YAAA;EACA;EAEAC,OAAA;IACAC,cAAA;MACA,KAAAN,QAAA;MACA,KAAAE,QAAA;MACA,KAAAD,WAAA;IACA;IAEAM,qBAAA;MACAC,OAAA,CAAAC,GAAA;MACA,MAAAC,UAAA,GAAAC,GAAA,CAAAC,OAAA,aAAAC,IAAA,CAAAC,WAAA,CAAAC,KAAA;MACAP,OAAA,CAAAC,GAAA,MAAAO,KAAA,CAAAC,MAAA,CAAAC,KAAA;MACAC,WAAA,CAAAT,UAAA,OAAAM,KAAA,CAAAC,MAAA,CAAAC,KAAA,KAAAE,IAAA,CACAZ,OAAA,CAAAC,GAAA,UACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAY,QAAA;MACA,SAAAjB,YAAA;QACA,MAAAkB,QAAA,GAAA1B,UAAA,CAAAD,EAAA,gBAAAS,YAAA,kBAAAJ,QAAA;QACA;QACAQ,OAAA,CAAAC,GAAA,2BAAAa,QAAA,CAAAC,IAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA,MAAAC,eAAA,GAAA7B,UAAA,CAAAD,EAAA;IACAG,UAAA,CAAA2B,eAAA,EAAAC,QAAA;MACA,KAAAvB,KAAA,GAAAuB,QAAA,CAAAC,IAAA,CAAAC,GAAA,CAAAC,GAAA;QACAC,EAAA,EAAAD,GAAA,CAAAC,EAAA;QACAC,IAAA,EAAAF,GAAA,CAAA9B,IAAA,GAAAgC;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}