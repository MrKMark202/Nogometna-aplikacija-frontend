{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport $router from '@/router';\nlet Service = axios.create({\n  baseURL: 'http://localhost:10000/',\n  timeout: 1000\n});\nService.interceptors.request.use(request => {\n  let token = Auth.getToken();\n  if (!token) {\n    $router.push({\n      path: \"/Login\"\n    });\n    return;\n  } else {\n    request.headers[\"Authorization\"] = 'Bearer' + token;\n  }\n  return request;\n});\nService.interceptors.response.use(response => response, error => {\n  if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n    Auth.logout();\n    $router.push({\n      path: \"/Login\"\n    });\n  }\n});\nlet Auth = {\n  async login(email, password) {\n    let response = await axios.post(\"http://localhost:10000/api/auth/login\", {\n      email: email,\n      password: password\n    });\n    let user = response.data;\n    localStorage.setItem('user', JSON.stringify(user));\n    return true;\n  },\n  logout() {\n    localStorage.removeItem('user');\n  },\n  async signin(name, surname, date, email, password, profilna) {\n    let response = await Service.post(\"/api/auth/signUp\", {\n      \"ime\": name,\n      \"prezime\": surname,\n      \"datumRodenja\": date,\n      \"email\": email,\n      \"password\": password,\n      \"profilnaSlika\": profilna\n    });\n    let user = response.data;\n    localStorage.setItem('user', JSON.stringify(user));\n    return true;\n  },\n  getUser() {\n    JSON.parse(localStorage.getItem('user'));\n  },\n  getToken() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return user.token;\n    } else {\n      return false;\n    }\n  },\n  authenticated() {\n    let user = Auth.getUser();\n    if (user && user.token) {\n      return true;\n    }\n    return false;\n  },\n  state: {\n    get authenticated() {\n      return Auth.authenticated();\n    },\n    get userEmail() {\n      let user = Auth.getUser();\n      if (user) {\n        return user.userEmail;\n      }\n      return Auth.getUser();\n    }\n  }\n};\nexport { Service, Auth };","map":{"version":3,"names":["axios","$router","Service","create","baseURL","timeout","interceptors","request","use","token","Auth","getToken","push","path","headers","response","error","status","logout","login","email","password","post","user","data","localStorage","setItem","JSON","stringify","removeItem","signin","name","surname","date","profilna","getUser","parse","getItem","authenticated","state","userEmail"],"sources":["C:/Users/mkata/OneDrive/Radna povrÅ¡ina/Fakultet/Web aplikacije/Nogometna aplikacija - web apps/Nogometna-aplikacija-frontend/src/components/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport $router from '@/router'\r\nlet Service = axios.create({\r\n    baseURL: 'http://localhost:10000/',\r\n    timeout: 1000,\r\n});\r\n\r\nService.interceptors.request.use((request) => {\r\n    let token = Auth.getToken()\r\n\r\n    if (!token) {\r\n        $router.push({ path: \"/Login\" });\r\n        return;\r\n    }\r\n    else {\r\n        request.headers[\"Authorization\"] = 'Bearer' + token;\r\n    }\r\n\r\n    return request;\r\n})\r\n\r\nService.interceptors.response.use((response) => response, (error) => {\r\n    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n        Auth.logout();\r\n        $router.push({ path: \"/Login\" });\r\n    }\r\n})\r\n\r\nlet Auth = {\r\n    async login(email, password) {\r\n        let response = await axios.post(\"http://localhost:10000/api/auth/login\", {\r\n            email: email,\r\n            password: password,\r\n        })\r\n\r\n        let user = response.data;\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        return true;\r\n    },\r\n\r\n    logout() {\r\n        localStorage.removeItem('user');\r\n    },\r\n\r\n    async signin(name, surname, date, email, password, profilna) {\r\n        let response = await Service.post(\"/api/auth/signUp\", {\r\n            \"ime\": name,\r\n            \"prezime\": surname,\r\n            \"datumRodenja\": date,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"profilnaSlika\": profilna\r\n        })\r\n\r\n        let user = response.data;\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        return true;\r\n    },\r\n\r\n    getUser() {\r\n        JSON.parse(localStorage.getItem('user'));\r\n    },\r\n\r\n    getToken() {\r\n        let user = Auth.getUser();\r\n        if (user && user.token) {\r\n            return user.token;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    authenticated() {\r\n        let user = Auth.getUser();\r\n        if (user && user.token) {\r\n            return true\r\n        }\r\n        return false;\r\n    },\r\n\r\n    state: {\r\n        get authenticated() {\r\n            return Auth.authenticated();\r\n        } ,\r\n        get userEmail() {\r\n            let user = Auth.getUser();\r\n\r\n            if (user) {\r\n                return user.userEmail\r\n            }\r\n\r\n            return Auth.getUser();\r\n        }\r\n    }\r\n};\r\n\r\nexport {Service, Auth};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}