{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth, collection, getDocs, setDoc, doc, onAuthStateChanged } from '@/firebase';\nexport default {\n  data() {\n    return {\n      sortBy: [{\n        value: bd,\n        order: 'desc'\n      }],\n      ligas: [],\n      klubs: [],\n      datas: [],\n      selectedLiga: '',\n      search: '',\n      headers: [{\n        text: 'Pozicija',\n        value: 'pz'\n      }, {\n        text: 'Naziv tima',\n        align: 'start',\n        sortable: false,\n        value: 'nt'\n      }, {\n        text: 'Postignuti pogodci',\n        value: 'pp'\n      }, {\n        text: 'Primljeni golovi',\n        value: 'pg'\n      }, {\n        text: 'Gol razlika',\n        value: 'gr'\n      }, {\n        text: 'Bodovi',\n        value: 'bd'\n      }],\n      podaci: []\n    };\n  },\n  mounted() {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\n        getDocs(colRef).then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            this.ligas.push(doc.id);\n          });\n        }).catch(error => {\n          console.error(\"Error fetching subcollection documents:\", error);\n        });\n      } else {\n        console.log(\"User is not loged in\");\n      }\n    });\n  },\n  methods: {\n    change() {\n      const colRef = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\");\n      getDocs(colRef).then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          this.klubs.push(doc.id);\n        });\n      });\n    },\n    changes() {\n      this.klubs.forEach(klub => {\n        const q = getDocs(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", klub, \"Tablica lige\"));\n        q.then(querySnapshot => {\n          querySnapshot.docs.forEach(doc => {\n            this.datas.push({\n              klub: klub,\n              data: doc.data()\n            });\n          });\n        });\n      });\n      this.datas.forEach(item => {\n        console.log('Club Name:', item.klub);\n        console.log('Club Data:', item.data);\n        console.log('Wins:', item.data.Bodovi);\n        this.podaci.push({\n          nt: item.klub,\n          pp: item.data.Postignutih_pogodaka,\n          pg: item.data.Primljenih_pogodaka,\n          gr: item.data.Postignutih_pogodaka - item.data.Primljenih_pogodaka,\n          bd: item.data.Bodovi\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","auth","collection","getDocs","setDoc","doc","onAuthStateChanged","data","sortBy","value","bd","order","ligas","klubs","datas","selectedLiga","search","headers","text","align","sortable","podaci","mounted","user","colRef","email","then","querySnapshot","forEach","push","id","catch","error","console","log","methods","change","currentUser","changes","klub","q","docs","item","Bodovi","nt","pp","Postignutih_pogodaka","pg","Primljenih_pogodaka","gr"],"sources":["src/views/Tablica.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        \r\n        <div class=\"naslov\">\r\n            <h1>Tablica</h1>\r\n        </div>\r\n\r\n        <div data-app class=\"obrub1\">\r\n            <v-card-title style=\"font-size:30px; color: black; font-weight: bold;\">\r\n                <v-select\r\n                  :items=\"ligas\"\r\n                  @change=\"change\"\r\n                  label=\"Izaberite ligu za prikazati\"\r\n                  v-model=\"selectedLiga\"\r\n                ></v-select>\r\n\r\n                <v-spacer></v-spacer>\r\n\r\n                <v-btn @click=\"changes\"></v-btn>\r\n                \r\n                <v-text-field\r\n                v-model=\"search\"\r\n                append-icon=\"mdi-magnify\"\r\n                label=\"Search\"\r\n                single-line\r\n                hide-details\r\n                ></v-text-field>\r\n            </v-card-title>\r\n\r\n            <v-data-table\r\n                sort-by=\"sortBy\"\r\n                :headers=\"headers\"\r\n                :items=\"podaci\"\r\n                :search=\"search\"\r\n                style=\"font-weight: bold; text-align: center;\"\r\n                item-key=\"name\"\r\n                class=\"elevation-1\"\r\n                loading\r\n                loading-text=\"Loading... Please wait\"\r\n            ></v-data-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, auth, collection, getDocs, setDoc, doc, onAuthStateChanged} from '@/firebase';\r\n  export default {\r\n    data () {\r\n      return {\r\n        sortBy: [{ value: bd, order: 'desc' }],\r\n        ligas: [],\r\n        klubs:[],\r\n        datas: [],\r\n        selectedLiga: '',\r\n        search: '',\r\n        headers: [\r\n            { text: 'Pozicija', value: 'pz'},\r\n            {\r\n                text: 'Naziv tima',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'nt',\r\n            },\r\n            { text: 'Postignuti pogodci', value: 'pp' },\r\n            { text: 'Primljeni golovi', value: 'pg' },\r\n            { text: 'Gol razlika', value: 'gr'},\r\n            { text: 'Bodovi', value: 'bd'},\r\n        ],\r\n        podaci: [],\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      onAuthStateChanged(auth, (user) => {\r\n\t\t\tif (user) {\r\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\r\n        getDocs(colRef)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n            this.ligas.push(doc.id); \r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching subcollection documents:\", error);\r\n        });\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"User is not loged in\");\r\n\t\t\t}\r\n\t\t});\r\n    },\r\n\r\n    methods: {\r\n\r\n      change() {\r\n            const colRef = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\");\r\n            getDocs(colRef)\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                    this.klubs.push(doc.id);\r\n                });\r\n          });\r\n      },\r\n\r\n      changes() {\r\n        this.klubs.forEach(klub => {\r\n        const q = getDocs(collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Klubovi\", klub, \"Tablica lige\"));\r\n        q.then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.datas.push({klub: klub , data: doc.data()});\r\n            });\r\n          });\r\n        })\r\n\r\n          this.datas.forEach((item) => {\r\n            console.log('Club Name:', item.klub);\r\n            console.log('Club Data:', item.data);\r\n            console.log('Wins:', item.data.Bodovi);\r\n            this.podaci.push({nt: item.klub, pp: item.data.Postignutih_pogodaka, pg: item.data.Primljenih_pogodaka, gr: item.data.Postignutih_pogodaka-item.data.Primljenih_pogodaka,bd: item.data.Bodovi});\r\n          });\r\n\r\n\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n    .obrub1\r\n    {\r\n        border: 2px solid white;\r\n        background-color: white;\r\n        padding: 50px;\r\n        margin-left: 200px;\r\n        margin-right: 200px;\r\n        margin-top: 100px;\r\n        margin-bottom: 100px;\r\n    }\r\n\r\n</style>"],"mappings":";AA6CA,SAAAA,EAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,kBAAA;AACA;EACAC,KAAA;IACA;MACAC,MAAA;QAAAC,KAAA,EAAAC,EAAA;QAAAC,KAAA;MAAA;MACAC,KAAA;MACAC,KAAA;MACAC,KAAA;MACAC,YAAA;MACAC,MAAA;MACAC,OAAA,GACA;QAAAC,IAAA;QAAAT,KAAA;MAAA,GACA;QACAS,IAAA;QACAC,KAAA;QACAC,QAAA;QACAX,KAAA;MACA,GACA;QAAAS,IAAA;QAAAT,KAAA;MAAA,GACA;QAAAS,IAAA;QAAAT,KAAA;MAAA,GACA;QAAAS,IAAA;QAAAT,KAAA;MAAA,GACA;QAAAS,IAAA;QAAAT,KAAA;MAAA,EACA;MACAY,MAAA;IACA;EACA;EAEAC,QAAA;IACAhB,kBAAA,CAAAL,IAAA,EAAAsB,IAAA;MACA,IAAAA,IAAA;QACA,MAAAC,MAAA,GAAAtB,UAAA,CAAAF,EAAA,WAAAuB,IAAA,CAAAE,KAAA;QACAtB,OAAA,CAAAqB,MAAA,EACAE,IAAA,CAAAC,aAAA;UACAA,aAAA,CAAAC,OAAA,CAAAvB,GAAA;YACA,KAAAO,KAAA,CAAAiB,IAAA,CAAAxB,GAAA,CAAAyB,EAAA;UACA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,4CAAAA,KAAA;QACA;MACA;QACAC,OAAA,CAAAC,GAAA;MACA;IACA;EACA;EAEAC,OAAA;IAEAC,OAAA;MACA,MAAAZ,MAAA,GAAAtB,UAAA,CAAAF,EAAA,WAAAC,IAAA,CAAAoC,WAAA,CAAAZ,KAAA,eAAAV,YAAA;MACAZ,OAAA,CAAAqB,MAAA,EACAE,IAAA,CAAAC,aAAA;QACAA,aAAA,CAAAC,OAAA,CAAAvB,GAAA;UACA,KAAAQ,KAAA,CAAAgB,IAAA,CAAAxB,GAAA,CAAAyB,EAAA;QACA;MACA;IACA;IAEAQ,QAAA;MACA,KAAAzB,KAAA,CAAAe,OAAA,CAAAW,IAAA;QACA,MAAAC,CAAA,GAAArC,OAAA,CAAAD,UAAA,CAAAF,EAAA,WAAAC,IAAA,CAAAoC,WAAA,CAAAZ,KAAA,eAAAV,YAAA,aAAAwB,IAAA;QACAC,CAAA,CAAAd,IAAA,CAAAC,aAAA;UACAA,aAAA,CAAAc,IAAA,CAAAb,OAAA,CAAAvB,GAAA;YACA,KAAAS,KAAA,CAAAe,IAAA;cAAAU,IAAA,EAAAA,IAAA;cAAAhC,IAAA,EAAAF,GAAA,CAAAE,IAAA;YAAA;UACA;QACA;MACA;MAEA,KAAAO,KAAA,CAAAc,OAAA,CAAAc,IAAA;QACAT,OAAA,CAAAC,GAAA,eAAAQ,IAAA,CAAAH,IAAA;QACAN,OAAA,CAAAC,GAAA,eAAAQ,IAAA,CAAAnC,IAAA;QACA0B,OAAA,CAAAC,GAAA,UAAAQ,IAAA,CAAAnC,IAAA,CAAAoC,MAAA;QACA,KAAAtB,MAAA,CAAAQ,IAAA;UAAAe,EAAA,EAAAF,IAAA,CAAAH,IAAA;UAAAM,EAAA,EAAAH,IAAA,CAAAnC,IAAA,CAAAuC,oBAAA;UAAAC,EAAA,EAAAL,IAAA,CAAAnC,IAAA,CAAAyC,mBAAA;UAAAC,EAAA,EAAAP,IAAA,CAAAnC,IAAA,CAAAuC,oBAAA,GAAAJ,IAAA,CAAAnC,IAAA,CAAAyC,mBAAA;UAAAtC,EAAA,EAAAgC,IAAA,CAAAnC,IAAA,CAAAoC;QAAA;MACA;IAGA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}