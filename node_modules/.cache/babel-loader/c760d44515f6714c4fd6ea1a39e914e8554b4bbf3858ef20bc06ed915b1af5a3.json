{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Auth } from '@/components/registracija';\nexport default {\n  data() {\n    return {\n      auth: Auth.state,\n      search: '',\n      selectedImageURL: '',\n      selectedLiga: '',\n      selectedKlub: '',\n      headers: [{\n        text: 'Pozicija',\n        value: 'pz'\n      }, {\n        text: 'Grb',\n        value: 'grb'\n      }, {\n        text: 'Naziv tima',\n        align: 'start',\n        value: 'nt'\n      }, {\n        text: 'Odigranih dvoboja',\n        value: 'od'\n      }, {\n        text: 'Postignuti pogodci',\n        value: 'pp'\n      }, {\n        text: 'Primljeni golovi',\n        value: 'pg'\n      }, {\n        text: 'Gol razlika',\n        value: 'gr'\n      }, {\n        text: 'Bodovi',\n        value: 'bd',\n        sortable: true\n      }],\n      podaci: [],\n      ligas: [],\n      klubs: []\n    };\n  },\n  mounted() {\n    this.dohvatiLige();\n  },\n  methods: {\n    async dohvatiLige() {\n      try {\n        const userEmail = this.auth.userEmail;\n        const response = await axios.get(`http://localhost:10000/api/liga/dohvat?email=${userEmail}`);\n        if (response.status !== 200) {\n          throw new Error('Network response was not ok');\n        }\n        this.ligas = response.data;\n        console.log(this.ligas);\n      } catch (error) {\n        console.error('Greška prilikom dohvaćanja liga:', error);\n      }\n    },\n    async dohvatiKlubove() {\n      this.klubs = [];\n      try {\n        const userEmail = this.auth.userEmail;\n        const userLiga = this.selectedLiga;\n        const response = await axios.get(`http://localhost:10000/api/klub/dohvat?email=${userEmail}&liga=${userLiga}`);\n        if (response.status !== 200) {\n          throw new Error('Network response was not ok');\n        }\n        this.klubs = response.data;\n        this.dohvatiTablicu();\n      } catch (error) {\n        console.error('Greška prilikom dohvaćanja klubova:', error);\n      }\n    },\n    async dohvatiTablicu() {\n      this.datas = [];\n      try {\n        const userEmail = this.auth.userEmail;\n        const userLiga = this.selectedLiga;\n        const response = await axios.get(`http://localhost:10000/api/tablica/dohvat?email=${userEmail}&liga=${userLiga}`);\n        if (response.status !== 200) {\n          throw new Error('Network response was not ok');\n        }\n        this.datas = response.data;\n        this.dohvatiPodatkeTablice();\n      } catch (error) {\n        console.error('Greška prilikom dohvaćanja podataka tablice', error);\n      }\n    },\n    async dohvatiPodatkeTablice() {\n      this.podaci = [];\n      const sortedDatas = [...this.datas];\n      sortedDatas.sort((a, b) => {\n        return b.bodovi - a.bodovi;\n      });\n      sortedDatas.forEach((item, index) => {\n        this.podaci.push({\n          pz: index + 1,\n          grb: item.grbKlub,\n          nt: item.klub,\n          od: item.odigranihDvoboja,\n          pp: item.postignutiPogodci,\n          pg: item.primljeniPogodci,\n          gr: item.postignutiPogodci - item.primljeniPogodci,\n          bd: item.bodovi\n        });\n      });\n    },\n    async deleteLiga() {\n      const response = await axios.patch(`http://localhost:10000/api/liga/delete`, {\n        ligaName: this.selectedLiga,\n        userEmail: this.auth.userEmail\n      });\n      await this.deleteKlub();\n    },\n    async deleteKlub() {\n      const response = await axios.patch(`http://localhost:10000/api/klub/delete`, {\n        ligaName: this.selectedLiga,\n        userEmail: this.auth.userEmail,\n        clubName: this.selectedKlub\n      });\n      await this.deleteTablica();\n    },\n    async deleteTablica() {\n      const response = await axios.patch(`http://localhost:10000/api/tablica/delete`, {\n        ligaName: this.selectedLiga,\n        userEmail: this.auth.userEmail,\n        clubName: this.selectedKlub\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Auth","data","auth","state","search","selectedImageURL","selectedLiga","selectedKlub","headers","text","value","align","sortable","podaci","ligas","klubs","mounted","dohvatiLige","methods","userEmail","response","get","status","Error","console","log","error","dohvatiKlubove","userLiga","dohvatiTablicu","datas","dohvatiPodatkeTablice","sortedDatas","sort","a","b","bodovi","forEach","item","index","push","pz","grb","grbKlub","nt","klub","od","odigranihDvoboja","pp","postignutiPogodci","pg","primljeniPogodci","gr","bd","deleteLiga","patch","ligaName","deleteKlub","clubName","deleteTablica"],"sources":["src/views/Tablica.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div data-app class=\"obrub1\">\r\n        <v-row >\r\n          <v-col cols=\"2\" v-if=\"selectedImageURL\">\r\n            <v-img :src=\"selectedImageURL\" class=\"image-box\"></v-img>\r\n          </v-col>\r\n          \r\n          <v-col cols=\"4\" >\r\n            <div class=\"naslov\" style=\"color: black !important; margin-top: 0px !important\">\r\n              <h1>Tablica</h1>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n       \r\n        <div class=\"grid-container2\">\r\n          <v-btn class=\"grid-item4\" @click=\"deleteLiga()\" elevation=\"2\" style=\"background-color: red; color: white; margin-top:40px; font-size: 30px;\">Izbriši ligu!</v-btn>\r\n          <v-btn class=\"grid-item4\" @click=\"deleteKlub()\" elevation=\"2\" style=\"background-color: red; color: white; margin-top:40px; font-size: 30px;\">Izbriši klub!</v-btn>\r\n            <v-select\r\n              class=\"grid-item4\"\r\n              label=\"Izaberite ligu za prikazati!\"\r\n              v-model=\"selectedLiga\"\r\n              style=\"width: 350px;\"\r\n              :items=\"ligas\"\r\n              @change=\"dohvatiKlubove()\"\r\n            ></v-select>\r\n\r\n            <v-select\r\n              class=\"grid-item4\"\r\n              label=\"Izaberite klub!\"\r\n              v-model=\"selectedKlub\"\r\n              style=\"width: 350px;\"\r\n              :items=\"klubs\"\r\n              ></v-select>\r\n        </div>\r\n                \r\n        <v-text-field\r\n          v-model=\"search\"\r\n          append-icon=\"mdi-magnify\"\r\n          label=\"Search\"\r\n          single-line\r\n          hide-details\r\n          class=\"search\"\r\n        ></v-text-field>\r\n            \r\n\r\n        <v-data-table\r\n          :headers=\"headers\"\r\n          :items=\"podaci\"\r\n          :search=\"search\"\r\n          style=\"font-weight: bold; text-align: center;\"\r\n          item-key=\"nt\"\r\n          class=\"elevation-1\"\r\n          loading\r\n          loading-text=\"Izaberite ligu!\"\r\n        >\r\n        <template v-slot:item.grb=\"{ item }\">\r\n            <v-img :src=\"item.grb\" class=\"klub-grb\"></v-img>\r\n          </template>\r\n        </v-data-table>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import axios from 'axios';\r\n  import { Auth } from '@/components/registracija'\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        auth: Auth.state,\r\n        search: '',\r\n        selectedImageURL: '',\r\n        selectedLiga: '',\r\n        selectedKlub: '',\r\n        headers: [\r\n            { text: 'Pozicija', value: 'pz'},\r\n            { text: 'Grb', value: 'grb'},\r\n            {\r\n                text: 'Naziv tima',\r\n                align: 'start',\r\n                value: 'nt',\r\n            },\r\n            { text: 'Odigranih dvoboja', value: 'od' },\r\n            { text: 'Postignuti pogodci', value: 'pp' },\r\n            { text: 'Primljeni golovi', value: 'pg' },\r\n            { text: 'Gol razlika', value: 'gr'},\r\n            { text: 'Bodovi', value: 'bd', sortable: true},\r\n        ],\r\n        podaci: [],\r\n        ligas: [],\r\n        klubs:[],\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.dohvatiLige()\r\n    },\r\n\r\n    methods: {\r\n      async dohvatiLige() {\r\n        try {\r\n          const userEmail = this.auth.userEmail;\r\n          const response = await axios.get(`http://localhost:10000/api/liga/dohvat?email=${userEmail}`);\r\n          if (response.status !== 200) {\r\n            throw new Error('Network response was not ok');\r\n          } \r\n          this.ligas = response.data\r\n          console.log(this.ligas)\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja liga:', error);\r\n        }\r\n      },\r\n\r\n      async dohvatiKlubove() {\r\n        this.klubs=[];\r\n        try {\r\n          const userEmail = this.auth.userEmail;\r\n          const userLiga = this.selectedLiga;\r\n          const response = await axios.get(`http://localhost:10000/api/klub/dohvat?email=${userEmail}&liga=${userLiga}`);\r\n          if (response.status !== 200) {\r\n            throw new Error('Network response was not ok');\r\n        } \r\n          this.klubs = response.data\r\n          this.dohvatiTablicu();\r\n        } catch (error) {\r\n          console.error('Greška prilikom dohvaćanja klubova:', error);\r\n        }\r\n      },\r\n\r\n      async dohvatiTablicu() {\r\n        this.datas = [];\r\n        try {\r\n          const userEmail = this.auth.userEmail;\r\n          const userLiga = this.selectedLiga;\r\n          const response = await axios.get(`http://localhost:10000/api/tablica/dohvat?email=${userEmail}&liga=${userLiga}`);\r\n          if (response.status !== 200) {\r\n            throw new Error('Network response was not ok');\r\n          } \r\n          this.datas = response.data;\r\n          this.dohvatiPodatkeTablice();\r\n        } catch (error) {\r\n          console.error('Greška prilikom dohvaćanja podataka tablice', error);\r\n        }\r\n      },\r\n\r\n      async dohvatiPodatkeTablice() {\r\n        this.podaci = [];\r\n        const sortedDatas = [...this.datas];\r\n        sortedDatas.sort((a, b) => {\r\n          return b.bodovi - a.bodovi;\r\n        });\r\n        \r\n        sortedDatas.forEach((item, index) => {\r\n          this.podaci.push({\r\n            pz: index + 1,\r\n            grb: item.grbKlub,\r\n            nt: item.klub,\r\n            od: item.odigranihDvoboja,\r\n            pp: item.postignutiPogodci,\r\n            pg: item.primljeniPogodci,\r\n            gr: item.postignutiPogodci - item.primljeniPogodci,\r\n            bd: item.bodovi,\r\n          });\r\n        });\r\n      },\r\n\r\n      async deleteLiga() {\r\n        const response = await axios.patch(`http://localhost:10000/api/liga/delete`, {\r\n          ligaName: this.selectedLiga,\r\n          userEmail: this.auth.userEmail\r\n        });\r\n\r\n        await this.deleteKlub();\r\n      },\r\n\r\n      async deleteKlub() {\r\n        const response = await axios.patch(`http://localhost:10000/api/klub/delete`, {\r\n          ligaName: this.selectedLiga,\r\n          userEmail: this.auth.userEmail,\r\n          clubName: this.selectedKlub\r\n        });\r\n        await this.deleteTablica();\r\n      },\r\n\r\n      async deleteTablica() {\r\n        const response = await axios.patch(`http://localhost:10000/api/tablica/delete`, {\r\n          ligaName: this.selectedLiga,\r\n          userEmail: this.auth.userEmail,\r\n          clubName: this.selectedKlub\r\n        });\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .obrub1\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .grid-container2 {\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    background-color: white;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n  }\r\n  .grid-item4 {\r\n    background-color: white;\r\n    padding: 20px;\r\n  }\r\n\r\n  .klub-grb {\r\n  max-width: 50px;\r\n  max-height: 50px;\r\n}\r\n  .search {\r\n    margin-left: 30%;\r\n    margin-right: 30%;\r\n    margin-bottom: 30px;\r\n  }\r\n  .image-box {\r\n  width: 200px;\r\n  height: 200px; \r\n  } \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}