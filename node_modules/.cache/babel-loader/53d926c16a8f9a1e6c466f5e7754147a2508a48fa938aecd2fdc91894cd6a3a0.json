{"ast":null,"code":"import { db, doc, setDoc, auth, ref, storage, uploadBytes, getDownloadURL } from \"@/firebase\";\nexport default {\n  name: \"createLIGA\",\n  data: () => ({\n    ligaName: null,\n    ligaYear: null,\n    ligaCountry: null,\n    form: false,\n    isLoading: false,\n    defaultURL: \"../../public/Slike/unknown_league.png\",\n    LigaPictureURL: \"\",\n    rules: {\n      required: v => !!v || 'This field is required'\n    }\n  }),\n  methods: {\n    clearFormData() {\n      this.ligaName = null;\n      this.ligaYear = null;\n      this.ligaCountry = null;\n    },\n    async UploadLigaImageToStorage() {\n      if (this.$refs.ligaPictureFile.files[0]) {\n        const storageRef = ref(storage, \"Users/\" + auth.currentUser.email + \"/LigaPicture\" + this.ligaName);\n        await uploadBytes(storageRef, this.$refs.ligaPictureFile.files[0]).then(snapshot => {\n          console.log(\"Upload complete!\");\n          getDownloadURL(snapshot.ref).then(url => {\n            this.LigaPictureURL = url;\n            this.createLiga();\n          }).catch(error => {\n            console.error(\"Error getting download URL:\", error);\n          });\n        }).catch(error => {\n          console.error(\"Error uploading image:\", error);\n        });\n      } else {\n        const storageRef = ref(storage, \"Users/\" + auth.currentUser.email + \"/LigaPicture\" + this.ligaName);\n        await uploadBytes(storageRef, this.$refs.ligaPictureFile.files[0]).then(snapshot => {\n          console.log(\"Upload complete!\");\n          getDownloadURL(snapshot.ref).then(url => {\n            this.defaultURL = url;\n            this.createLiga();\n          }).catch(error => {\n            console.error(\"Error getting download URL:\", error);\n          });\n        }).catch(error => {\n          console.error(\"Error uploading image:\", error);\n        });\n      }\n    },\n    async createLiga() {\n      await setDoc(doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.ligaName), {\n        ligaName: this.ligaName,\n        ligaYear: this.ligaYear,\n        ligaCountry: this.ligaCountry,\n        imageURL: this.LigaPictureURL\n      });\n      this.clearFormData();\n    }\n  }\n};","map":{"version":3,"names":["db","doc","setDoc","auth","ref","storage","uploadBytes","getDownloadURL","name","data","ligaName","ligaYear","ligaCountry","form","isLoading","defaultURL","LigaPictureURL","rules","required","v","methods","clearFormData","UploadLigaImageToStorage","$refs","ligaPictureFile","files","storageRef","currentUser","email","then","snapshot","console","log","url","createLiga","catch","error","imageURL"],"sources":["src/views/KreirajLIGU.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"naslov\">\r\n            <h1>Kreiraj ligu</h1>\r\n        </div>\r\n    \r\n        <div class=\"obrub\">\r\n            <v-form ref=\"form\" v-model=\"form\" style=\"margin-top: 20px;\">\r\n                <v-text-field v-model=\"ligaName\" label=\"Naziv Lige\" variant=\"underlined\" :rules=\"[rules.required]\"></v-text-field>\r\n                <v-text-field v-model=\"ligaYear\" label=\"Godina osnivanja\" variant=\"underlined\" :rules=\"[rules.required]\"></v-text-field>\r\n                <v-text-field v-model=\"ligaCountry\" label=\"DrÅ¾ava\" variant=\"underlined\" :rules=\"[rules.required]\"></v-text-field>\r\n            </v-form>\r\n\r\n            <h3 class=\"grb\">Grb Lige</h3>\r\n\r\n            <input \r\n                class=\"butot\" \r\n                type=\"file\" \r\n                ref=\"ligaPictureFile\" \r\n            />\r\n \r\n            <v-btn \r\n                @click=\"UploadLigaImageToStorage() \" \r\n                elevation=\"2\" class=\"btn_style\" \r\n                style=\"margin-top:40px; margin-left: 85% !important;\"\r\n                :disabled=\"!form\"\r\n                :loading=\"isLoading\"\r\n            >Kreiraj!</v-btn>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {db, doc, setDoc, auth, ref, storage, uploadBytes,getDownloadURL } from \"@/firebase\"\r\n\r\n    export default {\r\n        name: \"createLIGA\",\r\n        data: () => ({\r\n            ligaName: null,\r\n            ligaYear: null,\r\n            ligaCountry: null,\r\n            form: false,\r\n            isLoading: false,\r\n            defaultURL: \"../../public/Slike/unknown_league.png\",\r\n            LigaPictureURL: \"\",\r\n            rules: {\r\n                required: v => !!v || 'This field is required'\r\n            },\r\n        }),\r\n\r\n        methods: {\r\n            clearFormData() {\r\n                this.ligaName = null;\r\n                this.ligaYear = null;\r\n                this.ligaCountry = null;\r\n            },\r\n\r\n            async UploadLigaImageToStorage() {\r\n                if(this.$refs.ligaPictureFile.files[0]) {\r\n                    const storageRef = ref(storage, \"Users/\" + auth.currentUser.email + \"/LigaPicture\" + this.ligaName);\r\n\r\n                    await uploadBytes(storageRef, this.$refs.ligaPictureFile.files[0]).then((snapshot) => {\r\n                        console.log(\"Upload complete!\");\r\n\r\n                        getDownloadURL(snapshot.ref).then((url) => {\r\n                            this.LigaPictureURL = url;\r\n                            this.createLiga();\r\n                        }).catch((error) => {\r\n                        console.error(\"Error getting download URL:\", error);\r\n                        });\r\n                    }).catch((error) => {\r\n                        console.error(\"Error uploading image:\", error);\r\n                    });\r\n                }\r\n                else {\r\n                    const storageRef = ref(storage, \"Users/\" + auth.currentUser.email + \"/LigaPicture\" + this.ligaName);\r\n\r\n                    await uploadBytes(storageRef, this.$refs.ligaPictureFile.files[0]).then((snapshot) => {\r\n                        console.log(\"Upload complete!\");\r\n\r\n                        getDownloadURL(snapshot.ref).then((url) => {\r\n                            this.defaultURL = url;\r\n                            this.createLiga();\r\n                        }).catch((error) => {\r\n                        console.error(\"Error getting download URL:\", error);\r\n                        });\r\n                    }).catch((error) => {\r\n                        console.error(\"Error uploading image:\", error);\r\n                    });\r\n                }\r\n            },\r\n\r\n            async createLiga() {\r\n                await setDoc(\r\n                doc(db, \"Users\", auth.currentUser.email, \"Lige\", this.ligaName),\r\n                    {\r\n                        ligaName: this.ligaName,\r\n                        ligaYear: this.ligaYear,\r\n                        ligaCountry: this.ligaCountry,\r\n                        imageURL: this.LigaPictureURL\r\n                    }\r\n                );\r\n                this.clearFormData();\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    .obrub\r\n    {\r\n        border: 2px solid white;\r\n        background-color: white;\r\n        padding: 50px;\r\n        margin-left: 25% !important;\r\n        margin-right: 25% !important;\r\n        margin-top: 100px;\r\n\r\n        \r\n    }\r\n\r\n    .v-text-field\r\n    {\r\n        font-size: 20px;\r\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .butot\r\n    {\r\n        margin-top: 20px;\r\n        background-color: green;\r\n        color: black;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .grb\r\n    {\r\n        margin-top: 20px;\r\n        color: black;\r\n        font-size: 30px;\r\n    }\r\n</style>"],"mappings":"AAiCA,SAAAA,EAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,QAAA;IACAC,QAAA;IACAC,WAAA;IACAC,IAAA;IACAC,SAAA;IACAC,UAAA;IACAC,cAAA;IACAC,KAAA;MACAC,QAAA,EAAAC,CAAA,MAAAA,CAAA;IACA;EACA;EAEAC,OAAA;IACAC,cAAA;MACA,KAAAX,QAAA;MACA,KAAAC,QAAA;MACA,KAAAC,WAAA;IACA;IAEA,MAAAU,yBAAA;MACA,SAAAC,KAAA,CAAAC,eAAA,CAAAC,KAAA;QACA,MAAAC,UAAA,GAAAtB,GAAA,CAAAC,OAAA,aAAAF,IAAA,CAAAwB,WAAA,CAAAC,KAAA,yBAAAlB,QAAA;QAEA,MAAAJ,WAAA,CAAAoB,UAAA,OAAAH,KAAA,CAAAC,eAAA,CAAAC,KAAA,KAAAI,IAAA,CAAAC,QAAA;UACAC,OAAA,CAAAC,GAAA;UAEAzB,cAAA,CAAAuB,QAAA,CAAA1B,GAAA,EAAAyB,IAAA,CAAAI,GAAA;YACA,KAAAjB,cAAA,GAAAiB,GAAA;YACA,KAAAC,UAAA;UACA,GAAAC,KAAA,CAAAC,KAAA;YACAL,OAAA,CAAAK,KAAA,gCAAAA,KAAA;UACA;QACA,GAAAD,KAAA,CAAAC,KAAA;UACAL,OAAA,CAAAK,KAAA,2BAAAA,KAAA;QACA;MACA,OACA;QACA,MAAAV,UAAA,GAAAtB,GAAA,CAAAC,OAAA,aAAAF,IAAA,CAAAwB,WAAA,CAAAC,KAAA,yBAAAlB,QAAA;QAEA,MAAAJ,WAAA,CAAAoB,UAAA,OAAAH,KAAA,CAAAC,eAAA,CAAAC,KAAA,KAAAI,IAAA,CAAAC,QAAA;UACAC,OAAA,CAAAC,GAAA;UAEAzB,cAAA,CAAAuB,QAAA,CAAA1B,GAAA,EAAAyB,IAAA,CAAAI,GAAA;YACA,KAAAlB,UAAA,GAAAkB,GAAA;YACA,KAAAC,UAAA;UACA,GAAAC,KAAA,CAAAC,KAAA;YACAL,OAAA,CAAAK,KAAA,gCAAAA,KAAA;UACA;QACA,GAAAD,KAAA,CAAAC,KAAA;UACAL,OAAA,CAAAK,KAAA,2BAAAA,KAAA;QACA;MACA;IACA;IAEA,MAAAF,WAAA;MACA,MAAAhC,MAAA,CACAD,GAAA,CAAAD,EAAA,WAAAG,IAAA,CAAAwB,WAAA,CAAAC,KAAA,eAAAlB,QAAA,GACA;QACAA,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,WAAA,OAAAA,WAAA;QACAyB,QAAA,OAAArB;MACA,EACA;MACA,KAAAK,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}