{"ast":null,"code":"import { doc, auth, db, setDoc, createUserWithEmailAndPassword } from \"@/firebase\";\nexport default {\n  name: \"SignUP\",\n  components: {},\n  data: () => ({\n    agreement: false,\n    valid: true,\n    name: null,\n    surname: null,\n    email: null,\n    form: false,\n    isLoading: false,\n    password: null,\n    rules: {\n      email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\n      length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\n      password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) || 'Password must contain an upper case letter, a numeric character, and a special character',\n      required: v => !!v || 'This field is required'\n    }\n  }),\n  methods: {\n    clearFormData() {\n      this.name = null;\n      this.surname = null;\n      this.email = null;\n      this.password = null;\n    },\n    postActionMoveToView() {\n      this.$router.replace({\n        path: \"/\"\n      });\n    },\n    async saveAdditionalData(user, email, name, surname) {\n      await setDoc(doc(db, \"Users\", email.toLowerCase()), {\n        Email: email,\n        Name: name,\n        Surname: surname,\n        AuthorisationType: \"USER\"\n      });\n    },\n    signup() {\n      const email = this.email;\n      const password = this.password;\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        alert(\"Uspješna registracija\");\n        const user = userCredential.user;\n        const name = this.name;\n        const surname = this.surname;\n        this.clearFormData();\n        this.saveAdditionalData(user, email, name, surname);\n        this.postActionMoveToView();\n      }).catch(error => {\n        alert(\"Došlo je do pogreške\", error);\n      });\n    },\n    filterNonNumeric() {\n      this.numericInput = this.numericInput.replace(/[^0-9]/g, \"\");\n    }\n  }\n};","map":{"version":3,"names":["doc","auth","db","setDoc","createUserWithEmailAndPassword","name","components","data","agreement","valid","surname","email","form","isLoading","password","rules","v","match","length","len","required","methods","clearFormData","postActionMoveToView","$router","replace","path","saveAdditionalData","user","toLowerCase","Email","Name","Surname","AuthorisationType","signup","then","userCredential","alert","catch","error","filterNonNumeric","numericInput"],"sources":["src/views/Signup.vue"],"sourcesContent":["<template>\r\n\r\n    <div>\r\n        <div class=\"naslov1\">\r\n            <h1>SignUp</h1>\r\n        </div>\r\n\r\n    <v-card\r\n      class=\"mx-auto\"\r\n      style=\"max-width: 500px; margin-top: 80px; margin-left: 14%; padding: 30px;\"\r\n    >\r\n\r\n    <v-card-title> Imaš li već račun? <v-btn to=\"/LogIn\" style=\"margin-left:10px; color:black; text-decoration: none;\"> Prijavi se! </v-btn> </v-card-title>\r\n\r\n      <v-form ref=\"form\" v-model=\"form\" style=\"margin-top: 20px;\">\r\n\r\n      <v-text-field\r\n          v-model=\"name\"\r\n          filled\r\n          label=\"Name\"\r\n          style=\"min-height: 100px;\"\r\n          :rules=\"[rules.required]\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"surname\"\r\n          filled\r\n          color=\"black\"\r\n          label=\"Your birth date\"\r\n          style=\"min-height: 100px\"\r\n          :rules=\"[rules.]\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"surname\"\r\n          filled\r\n          color=\"black\"\r\n          label=\"Surname\"\r\n          style=\"min-height: 100px\"\r\n          :rules=\"[rules.required]\"\r\n        ></v-text-field>\r\n\r\n      <v-text-field\r\n          v-model=\"email\"\r\n          :rules=\"[rules.email, rules.required]\"\r\n          filled\r\n          color=\"black\"\r\n          label=\"Email address\"\r\n          style=\"min-height: 100px\"\r\n          type=\"email\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"password\"\r\n          :rules=\"[rules.password, rules.length(6), rules.required]\"\r\n          filled\r\n          color=\"black\"\r\n          counter=\"6\"\r\n          label=\"Password\"\r\n          style=\"min-height: 100px\"\r\n          type=\"password\"\r\n        ></v-text-field>\r\n\r\n        <v-checkbox\r\n          v-model=\"agreement\"\r\n          :rules=\"[rules.required]\"\r\n          color=\"black\"\r\n        >\r\n          <template v-slot:label>\r\n            I agree to the Terms of Service and Privacy Policy\r\n          </template>\r\n        </v-checkbox>\r\n      </v-form>\r\n      <v-divider></v-divider>\r\n      <v-card-actions>\r\n        <v-btn\r\n          style=\"margin-bottom: 10px;\"\r\n          text\r\n          @click=\"$refs.form.reset()\"\r\n        >\r\n          Clear\r\n        </v-btn>\r\n        <v-spacer></v-spacer>\r\n        <v-btn\r\n          type=\"button\"\r\n          :disabled=\"!form\"\r\n          :loading=\"isLoading\"\r\n          class=\"white--text\"\r\n          color=\"black\"\r\n          depressed\r\n          @click=\"signup\"\r\n        >\r\n          SignUP!\r\n        </v-btn>\r\n      </v-card-actions>\r\n        </v-card>\r\n    </div>\r\n  </template>\r\n\r\n\r\n<script>\r\n\r\nimport {\r\n  doc,\r\n\tauth,\r\n\tdb,\r\n\tsetDoc,\r\n\tcreateUserWithEmailAndPassword,\r\n} from \"@/firebase\"\r\n\r\n  export default {\r\n    name: \"SignUP\",\r\n    components: {},\r\n    data: () => ({\r\n      agreement: false,\r\n      valid: true,\r\n      name: null,\r\n      surname: null,\r\n      email: null,\r\n      form: false,\r\n      isLoading: false,\r\n      password: null,\r\n      rules: {\r\n        email: v => !!(v || '').match(/@/) || 'Please enter a valid email',\r\n        length: len => v => (v || '').length >= len || `Invalid character length, required ${len}`,\r\n        password: v => !!(v || '').match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(_|[^\\w])).+$/) ||\r\n          'Password must contain an upper case letter, a numeric character, and a special character',\r\n        required: v => !!v || 'This field is required',\r\n      },\r\n    }),\r\n\r\n    methods: {\r\n      clearFormData() {\r\n\t\t\t  this.name = null;\r\n\t\t\t  this.surname = null;\r\n\t\t\t  this.email = null;\r\n\t\t\t  this.password = null;\r\n\t\t},\r\n\r\n    postActionMoveToView() {\r\n\t\t\tthis.$router.replace({ path: \"/\" });\r\n\t\t},\r\n\r\n    async saveAdditionalData(user, email, name, surname) {\r\n\t\t\tawait setDoc(doc(db, \"Users\", email.toLowerCase()), {\r\n\t\t\t\tEmail: email,\r\n\t\t\t\tName: name,\r\n\t\t\t\tSurname: surname,\r\n\t\t\t\tAuthorisationType: \"USER\",\r\n\t\t\t});\r\n\t\t},\r\n    \r\n      signup() {\r\n        const email = this.email;\r\n        const password = this.password;\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n          .then((userCredential) =>{\r\n            alert(\"Uspješna registracija\");\r\n            const user = userCredential.user;\r\n            const name = this.name;\r\n            const surname = this.surname;\r\n            this.clearFormData();\r\n            this.saveAdditionalData(user, email, name, surname);\r\n            this.postActionMoveToView();\r\n          })\r\n          .catch((error) => {\r\n            alert(\"Došlo je do pogreške\", error);\r\n          });\r\n      },\r\n      \r\n      filterNonNumeric() {\r\n\t\t\t\tthis.numericInput = this.numericInput.replace(/[^0-9]/g, \"\");\r\n      },\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.naslov1\r\n  {\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    padding-left: 15%;\r\n    color: white;\r\n    margin-top:120px;\r\n  }\r\n\r\n  \r\n</style>"],"mappings":"AAsGA,SACAA,GAAA,EACAC,IAAA,EACAC,EAAA,EACAC,MAAA,EACAC,8BAAA,QACA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,SAAA;IACAC,KAAA;IACAJ,IAAA;IACAK,OAAA;IACAC,KAAA;IACAC,IAAA;IACAC,SAAA;IACAC,QAAA;IACAC,KAAA;MACAJ,KAAA,EAAAK,CAAA,OAAAA,CAAA,QAAAC,KAAA;MACAC,MAAA,EAAAC,GAAA,IAAAH,CAAA,KAAAA,CAAA,QAAAE,MAAA,IAAAC,GAAA,0CAAAA,GAAA;MACAL,QAAA,EAAAE,CAAA,OAAAA,CAAA,QAAAC,KAAA,yDACA;MACAG,QAAA,EAAAJ,CAAA,MAAAA,CAAA;IACA;EACA;EAEAK,OAAA;IACAC,cAAA;MACA,KAAAjB,IAAA;MACA,KAAAK,OAAA;MACA,KAAAC,KAAA;MACA,KAAAG,QAAA;IACA;IAEAS,qBAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;QAAAC,IAAA;MAAA;IACA;IAEA,MAAAC,mBAAAC,IAAA,EAAAjB,KAAA,EAAAN,IAAA,EAAAK,OAAA;MACA,MAAAP,MAAA,CAAAH,GAAA,CAAAE,EAAA,WAAAS,KAAA,CAAAkB,WAAA;QACAC,KAAA,EAAAnB,KAAA;QACAoB,IAAA,EAAA1B,IAAA;QACA2B,OAAA,EAAAtB,OAAA;QACAuB,iBAAA;MACA;IACA;IAEAC,OAAA;MACA,MAAAvB,KAAA,QAAAA,KAAA;MACA,MAAAG,QAAA,QAAAA,QAAA;MACAV,8BAAA,CAAAH,IAAA,EAAAU,KAAA,EAAAG,QAAA,EACAqB,IAAA,CAAAC,cAAA;QACAC,KAAA;QACA,MAAAT,IAAA,GAAAQ,cAAA,CAAAR,IAAA;QACA,MAAAvB,IAAA,QAAAA,IAAA;QACA,MAAAK,OAAA,QAAAA,OAAA;QACA,KAAAY,aAAA;QACA,KAAAK,kBAAA,CAAAC,IAAA,EAAAjB,KAAA,EAAAN,IAAA,EAAAK,OAAA;QACA,KAAAa,oBAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAF,KAAA,yBAAAE,KAAA;MACA;IACA;IAEAC,iBAAA;MACA,KAAAC,YAAA,QAAAA,YAAA,CAAAhB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}