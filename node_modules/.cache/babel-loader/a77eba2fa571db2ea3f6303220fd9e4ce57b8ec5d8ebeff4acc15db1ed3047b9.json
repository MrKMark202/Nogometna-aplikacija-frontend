{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth, collection, getDocs, onAuthStateChanged, doc } from '@/firebase';\nexport default {\n  data() {\n    return {\n      ligas: [],\n      dataLigas: [],\n      datas: [],\n      selectedLiga: '',\n      search: '',\n      selectedImageURL: '',\n      array1: [],\n      headers: [{\n        text: 'Kolo',\n        value: 'kl'\n      }, {\n        text: 'Domacin',\n        value: 'dm'\n      }, {\n        text: 'Golovi domačina',\n        value: 'gd'\n      }, {\n        text: 'Golovi gostiju',\n        value: 'gg'\n      }, {\n        text: 'Gosti',\n        value: 'gs'\n      }],\n      podaci: []\n    };\n  },\n  mounted() {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\n        getDocs(colRef).then(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            this.ligas.push(doc.id);\n          });\n        }).catch(error => {\n          console.error(\"Error fetching subcollection documents:\", error);\n        });\n      } else {\n        console.log(\"User is not loged in\");\n      }\n      this.dohvatPodatakaLige();\n    });\n  },\n  methods: {\n    async dohvatPodatakaLige() {\n      this.dataLigas = [];\n      const a = collection(db, \"Users\", auth.currentUser.email, \"Lige\");\n      await getDocs(a).then(querySnapshot => {\n        querySnapshot.docs.forEach(doc => {\n          this.dataLigas.push({\n            liga: doc.id,\n            data: doc.data()\n          });\n        });\n      });\n    },\n    async loadLeagueImage() {\n      if (this.selectedLiga) {\n        const selectedLigaData = this.dataLigas.find(liga => liga.liga === this.selectedLiga);\n        if (selectedLigaData && selectedLigaData.data.imageURL) {\n          this.selectedImageURL = selectedLigaData.data.imageURL;\n        } else {\n          this.selectedImageURL = \"https://cdn.discordapp.com/attachments/913822641645813772/1144032009061142618/unknown_league.png\";\n        }\n      } else {\n        this.selectedImageURL = '';\n      }\n    },\n    dohvatPodatakaTekme() {\n      const tekma = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Utakmice\");\n      getDocs(tekma).then(querySnapshot => {\n        querySnapshot.docs.forEach(doc => {\n          this.array1.push(doc.id);\n          console.log(array1);\n        });\n      });\n    },\n    dohvatPodatakaZATablicu() {\n      this.podaci = [];\n      const sortedDatas = [...this.datas];\n      sortedDatas.forEach((item, index) => {\n        this.podaci.push({});\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","auth","collection","getDocs","onAuthStateChanged","doc","data","ligas","dataLigas","datas","selectedLiga","search","selectedImageURL","array1","headers","text","value","podaci","mounted","user","colRef","email","then","querySnapshot","forEach","push","id","catch","error","console","log","dohvatPodatakaLige","methods","a","currentUser","docs","liga","loadLeagueImage","selectedLigaData","find","imageURL","dohvatPodatakaTekme","tekma","dohvatPodatakaZATablicu","sortedDatas","item","index"],"sources":["src/views/TekmaPodaci.vue"],"sourcesContent":["<template>\r\n    <div data-app class=\"obrub1\">\r\n        <v-row >\r\n          <v-col cols=\"2\" v-if=\"selectedImageURL\">\r\n            <v-img :src=\"selectedImageURL\" v-if=\"selectedImageURL\" class=\"image-box\"></v-img>\r\n          </v-col>\r\n          \r\n          <v-col cols=\"4\" >\r\n            <div class=\"naslov\" style=\"color: black !important; margin-top: 0px !important;\">\r\n              <h2>Pregled utakmica</h2>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n            <v-select\r\n              :items=\"ligas\"\r\n              \r\n              label=\"Izaberite ligu za prikazati!\"\r\n              v-model=\"selectedLiga\"\r\n              style=\"width: 40%; margin-left: 30%;\"\r\n            ></v-select>\r\n\r\n            <v-btn @click=\"dohvatPodatakaTekme()\"></v-btn>\r\n                \r\n            <v-text-field\r\n                v-model=\"search\"\r\n                append-icon=\"mdi-magnify\"\r\n                label=\"Search\"\r\n                single-line\r\n                hide-details\r\n                class=\"search\"\r\n            ></v-text-field>\r\n            \r\n\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"podaci\"\r\n                :search=\"search\"\r\n                style=\"font-weight: bold; text-align: center;\"\r\n                item-key=\"nt\"\r\n                class=\"elevation-1\"\r\n                loading\r\n                loading-text=\"Izaberite ligu!\"\r\n            >\r\n            </v-data-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {db, auth, collection, getDocs, onAuthStateChanged, doc} from '@/firebase';\r\n  export default {\r\n    data () {\r\n      return {\r\n        ligas: [],\r\n        dataLigas: [],\r\n        datas: [],\r\n        selectedLiga: '',\r\n        search: '',\r\n        selectedImageURL: '',\r\n        array1: [],\r\n        headers: [\r\n            { text: 'Kolo', value: 'kl'},\r\n            { text: 'Domacin', value: 'dm'},\r\n            { text: 'Golovi domačina', value: 'gd'},\r\n            { text: 'Golovi gostiju', value: 'gg'},\r\n            { text: 'Gosti', value: 'gs' },\r\n        ],\r\n        podaci: [],\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      onAuthStateChanged(auth, (user) => {\r\n\t\t\tif (user) {\r\n        const colRef = collection(db, \"Users\", user.email, \"Lige\");\r\n        getDocs(colRef)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n            this.ligas.push(doc.id);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching subcollection documents:\", error);\r\n        });\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"User is not loged in\");\r\n\t\t\t}\r\n      this.dohvatPodatakaLige();\r\n\t\t});\r\n    },\r\n\r\n    methods: {\r\n      async dohvatPodatakaLige() {\r\n        this.dataLigas = [];\r\n          const a = collection(db, \"Users\", auth.currentUser.email, \"Lige\");\r\n          await getDocs(a)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.dataLigas.push({liga: doc.id, data: doc.data()});\r\n            });\r\n          });\r\n      },\r\n\r\n      async loadLeagueImage() {\r\n      if (this.selectedLiga) {\r\n        const selectedLigaData = this.dataLigas.find(liga => liga.liga === this.selectedLiga);\r\n        if (selectedLigaData && selectedLigaData.data.imageURL) {\r\n          this.selectedImageURL = selectedLigaData.data.imageURL;\r\n        } else {\r\n          this.selectedImageURL = \"https://cdn.discordapp.com/attachments/913822641645813772/1144032009061142618/unknown_league.png\";\r\n        }\r\n      } else {\r\n        this.selectedImageURL = '';\r\n      }\r\n    },\r\n\r\n    dohvatPodatakaTekme() {\r\n        const tekma = collection(db, \"Users\", auth.currentUser.email, \"Lige\", this.selectedLiga, \"Utakmice\");\r\n           getDocs(tekma)\r\n          .then((querySnapshot) => {\r\n            querySnapshot.docs.forEach((doc) => {\r\n              this.array1.push(doc.id);\r\n              console.log(array1);\r\n            });\r\n          });\r\n    },\r\n\r\n      dohvatPodatakaZATablicu () {\r\n        this.podaci = [];\r\n        const sortedDatas = [...this.datas];\r\n\r\n        sortedDatas.forEach((item, index) => {\r\n          this.podaci.push({\r\n          });\r\n        });\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .obrub1\r\n  {\r\n    border: 2px solid white;\r\n    background-color: white;\r\n    padding: 50px;\r\n    margin-left: 200px;\r\n    margin-right: 200px;\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .search {\r\n    margin-left: 30%;\r\n    margin-right: 30%;\r\n    margin-bottom: 30px;\r\n  }\r\n  .image-box {\r\n  width: 200px;\r\n  height: 200px; \r\n  } \r\n</style>"],"mappings":";AAgDA,SAAAA,EAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,kBAAA,EAAAC,GAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,SAAA;MACAC,KAAA;MACAC,YAAA;MACAC,MAAA;MACAC,gBAAA;MACAC,MAAA;MACAC,OAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAC,MAAA;IACA;EACA;EAEAC,QAAA;IACAd,kBAAA,CAAAH,IAAA,EAAAkB,IAAA;MACA,IAAAA,IAAA;QACA,MAAAC,MAAA,GAAAlB,UAAA,CAAAF,EAAA,WAAAmB,IAAA,CAAAE,KAAA;QACAlB,OAAA,CAAAiB,MAAA,EACAE,IAAA,CAAAC,aAAA;UACAA,aAAA,CAAAC,OAAA,CAAAnB,GAAA;YACA,KAAAE,KAAA,CAAAkB,IAAA,CAAApB,GAAA,CAAAqB,EAAA;UACA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,4CAAAA,KAAA;QACA;MACA;QACAC,OAAA,CAAAC,GAAA;MACA;MACA,KAAAC,kBAAA;IACA;EACA;EAEAC,OAAA;IACA,MAAAD,mBAAA;MACA,KAAAvB,SAAA;MACA,MAAAyB,CAAA,GAAA/B,UAAA,CAAAF,EAAA,WAAAC,IAAA,CAAAiC,WAAA,CAAAb,KAAA;MACA,MAAAlB,OAAA,CAAA8B,CAAA,EACAX,IAAA,CAAAC,aAAA;QACAA,aAAA,CAAAY,IAAA,CAAAX,OAAA,CAAAnB,GAAA;UACA,KAAAG,SAAA,CAAAiB,IAAA;YAAAW,IAAA,EAAA/B,GAAA,CAAAqB,EAAA;YAAApB,IAAA,EAAAD,GAAA,CAAAC,IAAA;UAAA;QACA;MACA;IACA;IAEA,MAAA+B,gBAAA;MACA,SAAA3B,YAAA;QACA,MAAA4B,gBAAA,QAAA9B,SAAA,CAAA+B,IAAA,CAAAH,IAAA,IAAAA,IAAA,CAAAA,IAAA,UAAA1B,YAAA;QACA,IAAA4B,gBAAA,IAAAA,gBAAA,CAAAhC,IAAA,CAAAkC,QAAA;UACA,KAAA5B,gBAAA,GAAA0B,gBAAA,CAAAhC,IAAA,CAAAkC,QAAA;QACA;UACA,KAAA5B,gBAAA;QACA;MACA;QACA,KAAAA,gBAAA;MACA;IACA;IAEA6B,oBAAA;MACA,MAAAC,KAAA,GAAAxC,UAAA,CAAAF,EAAA,WAAAC,IAAA,CAAAiC,WAAA,CAAAb,KAAA,eAAAX,YAAA;MACAP,OAAA,CAAAuC,KAAA,EACApB,IAAA,CAAAC,aAAA;QACAA,aAAA,CAAAY,IAAA,CAAAX,OAAA,CAAAnB,GAAA;UACA,KAAAQ,MAAA,CAAAY,IAAA,CAAApB,GAAA,CAAAqB,EAAA;UACAG,OAAA,CAAAC,GAAA,CAAAjB,MAAA;QACA;MACA;IACA;IAEA8B,wBAAA;MACA,KAAA1B,MAAA;MACA,MAAA2B,WAAA,YAAAnC,KAAA;MAEAmC,WAAA,CAAApB,OAAA,EAAAqB,IAAA,EAAAC,KAAA;QACA,KAAA7B,MAAA,CAAAQ,IAAA,EACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}